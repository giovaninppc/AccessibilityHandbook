/* 
  Localizable.strings
  Accessibility Handbook

  Created by Giovani Nascimento Pereira on 20/09/22.
  
*/
"title" = "Handbook de Acessibilidade";
"handbook" = "Handbook";
"VoiceOver" = "VoiceOver";
"Search" = "Pesquisar";
"sharePage" = "Compartilhar p√°gina";

// Search

"Search.Empty.title" = "Nenhum resultado encontrado";
"Search.Empty.message" = "Tente mudar a sua pesquisa!";
"Search.Empty.action" = "Pesquisar em todas as p√°ginas";

// Home

"Home.developmentGuides" = "Guia de Desenvolvimento";
"Home.handbookGame" = "Jogos do Handbook";
"Home.handbookGameDescription" = "Teste seu conhecimento de acessibilidade com uma s√©rie de jogos!";
"Home.dynamicFonts" = "Fontes din√¢micas";
"Home.otherFeatures" = "Outras features";
"Home.collaborate" = "Colabore";
"Home.shortcuts" = "Atalhos";
"Home.colors" = "Cores";
"Home.notifications" = "Notificar";
"Home.classes" = "Aulas";
"Home.classesDescription" = "Aprenda a planejar a preparar acessibilidade nos seus apps! (Apenas dispon√≠vel em Ingl√™s no momento)";

// WhatsNew

"WhatsNew.title" = "O que h√° de novo no app?";
"WhatsNew.seeTheReleaseNotes" = "Veja o 'release notes' no GitHub %@";
"WhatsNew.version" = "Vers√£o %@";
"WhatsNew.currentVersion" = "Vers√£o autal %@";

"WhatsNew.1_1_0.description" = "Agora dispon√≠vel em Portugu√™s do Brasil üáßüá∑!\nE novo sistema de 'syntax highlight' nos exemplos de c√≥digo.";

"WhatsNew.1_2_0.description" = "Novos guias de gestos e fontes din√¢micas.";

"WhatsNew.1_3_0.description" = "Novo jogo!\nNovo guia de reduzir anima√ß√µes.\nE nova p√°gina de fontes din√¢micas.";

"WhatsNew.1_4_0.description" = "Novo guia de Modo escuro!";

"WhatsNew.1_5_0.description" = "Nova se√ß√£o de ajudas visuais.\nNva p√°gina de imagens.";

"WhatsNew.1_6_0.description" = "Novo 'O que h√° de novo no app?' para ajudar usu√°rios a encontrar conte√∫dos que eles ainda n√£o viram.\nA pesquisa agora √© ordenada alfabeticamente, com os √≠cones de cada respectiva se√ß√£o.\nNovo compartilhamento de p√°gina por deeplink - agora voc√™ pode compartilhar conte√∫dos com links que podem ser abertos por qualquer um!\nE novas p√°ginas de traits de acessibilidade.";

"WhatsNew.1_7_0.description" = "Novo layout da p√°gina inicial para iPads! \nE uma nova p√°gina de exemplos de Rotores! Agora voc√™ pode testar usar rotores customizados.";

"WhatsNew.1_8_0.description" = "Introduzindo: Aulas!\nNossa nova atualiza√ß√£o com conte√∫do sobre como pensar acessivelmente. Com ferramentas, exemplos, diagramas... Estamos tentando trazer mais contexto, n√£o apenas no que s√£o as features e op√ß√µes de acessibilidade, mas tamb√©m como identificar onde us√°-las e o porqu√™. T√° ficando bem legal, d√™ uma olhada!";

// Using

"UsingTheVoiceOver" = "Usando o VoiceOver";

// Enable VoiceOver

"EnableVoiceOver.title" = "Ativando o VoiceOver";
"EnableVoiceOver.text1" = "VoiceOver √© o nome do leitor de tela nativo do iOS. Usado para prover acessibilidade para deficientes visuais.";
"EnableVoiceOver.text2" = "Para ativar o VoiceOver, v√° nas configura√ß√µes do seu dispositivo na se√ß√£o de Acessibilidade.";
"EnableVoiceOver.text3" = "Ent√£o, v√° at√© a se√ß√£o de VoiceOver e ligue a chave.";
"EnableVoiceOver.text4" = "Como alternativa a fazer isso toda vez que voc√™ quiser ativar o leitor de tela, voc√™ pode ir na se√ß√£o de 'Atalhos de Acessibilidade'.";
"EnableVoiceOver.text5" = "L√°, selecione quais op√ß√µes voc√™ quer ter acesso r√°pido. N√£o se esque√ßa de selecionar o VoiceOver.";
"EnableVoiceOver.text6" = "E agora, voc√™ pode acessar quaisquer uma dessas features clicando tr√™s vezes no bot√£o lateral do seu dispositivo (o bot√£o que trava a tela).";
"EnableVoiceOver.comment" = "Al√©m de dar um acesso r√°pido, ele tamb√©m ajuda a desligar o VoiceOver rapidamente caso voc√™ fique travado em alguma coisa enquanto ele est√° ativado.";

// Element Reading Order

"ElementReadingOrder.title" = "Ordem de Leitura";
"ElementReadingOrder.text1" = "O VoiceOver l√™ o conte√∫do na tela seguindo a 'ordem de leitura natural da l√≠ngua do dispositivo' ";
"ElementReadingOrder.comment1" = "O qu√™?";
"ElementReadingOrder.text2" = "Por exemplo, em Portugu√™s, a ordem de leitura √© da esquerda para a direita, e de cima para baixo. J√° em japon√™s √© da direita para a esquerda e de cima para baixo.";
"ElementReadingOrder.text3" = "Ent√£o, o leitor ir√° seguir, ou pelo menos tentar, essa mesma ordem enquanto l√™ o conte√∫do.";
"ElementReadingOrder.comment2" = "Voc√™ pode mudar a ordem de leitura dos elementos, se voc√™ quiser.";
"ElementReadingOrder.link" = "Olhe a p√°gina 'Accessibility Priority' para mais informa√ß√µes";
"ElementReadingOrder.text4" = "E quando estamos falando de apenas um elemento focado (Onde o cursor est√° focado no momento)";
"ElementReadingOrder.text5" = "O conte√∫do desse elemento ser√° lido na seguinte ordem:";

// Rotor

"Rotor" = "Rotor";
"Rotor.comment1" = "O Rotor √© esse tipo de coisa que parece que ningu√©m conhece direito.";
"Rotor.text1" = "Se voc√™ fizer um gesto de um c√≠culo com 2 dedos na tela, voc√™ vai ativar o Rotor.";
"Rotor.comment2" = "Ligue o VoiceOver e tente ativar o rotor agora mesmo!";
"Rotor.text2" = "O Rotor t√™m algumas a√ß√µes padr√£o, como mudar a velocidade de leitura ou a l√≠ngua do leitor.";
"Rotor.text3" = "Voc√™ tamb√©m pode criar a√ß√µoes customizadas para o Rotor. A ideia √© que isso ajude o usu√°rio a encontrar conte√∫dos espec√≠ficos, como filtrando por links na sua tela, ou qualquer conte√∫do semelhante, permitindo que o usu√°rio navegue apenas nesse itens selecionados no Rotor.";
"Rotor.comment3" = "Use a p√°gina abaixo para testar o Rotor com a√ß√µes customizadas!";
"Rotor.openExample" = "Abrir exemplo";
"Rotor.image" = "Exemplo do Rotor ativado";

"RotorExample.title" = "Exemplo de Rotor";
"RotorExample.text1" = "Esta p√°gina cont√©m ites customizados no rotor: Images, Notas, Hist√≥ria e Links.";
"RotorExample.text2" = "Selecione a op√ß√£o desejada no rotor, ent√£o, deslize para cima e para baixo para filtrar apenas pelo conte√∫do selecionado.";
"RotorExample.text3" = "Este √© um bom exemplo de como usar os rotores para filtrar conte√∫do nas suas p√°ginas, e prover maneiras mais f√°ceis de encontrar o que se est√° procurando.";

"RotorExample.images" = "Imagens";
"RotorExample.history" = "Hist√≥ria";
"RotorExample.notes" = "Notas";
"RotorExample.links" = "Links";

"RotorExample.vanGogh" = "Van Gogh";
"RotorExample.history1" = "Vincent Van Gogh foi um pintor Holand√™s nascido em Mar√ßo de 1853. Ele √© considerado um dos pintores mais influentes da hist√≥ria, apesar de ter sido reconhecido apenas depois da sua morte.";
"RotorExample.history2" = "Ele n√£o come√ßou sua carreira como pintor, e apenas come√ßou a pintar por volta de 1880. E, quando em Paris, foi introduzido ao \"Impressionismo\".";
"RotorExample.vanGoghImage" = "Auto retrato, por Vincent Van Gogh.";
"RotorExample.note1" = "O impressionismo foi um movimento que surgiu na pintura francesa do s√©culo XIX, vivia-se nesse momento a chamada Belle √âpoque ou Bela √âpoca em portugu√™s.";
"RotorExample.link1" = "Impressionismo";
"RotorExample.history3" = "Uma de suas pinturas, a 'Noite estrelada', foi pintada por volta de 1889, e √© hoje uma das pinturas mais famosas no mundo todo.";
"RotorExample.starryNight" = "A noite estrelada, por Vincent Van Ghog.";
"RotorExample.note2" = "Ela mostra a vista de uma janela virada para o leste no seu quarto do asilo, logo antes do amanhecer, com a adi√ß√£o de uma vila imagin√°ria.";
"RotorExample.link2" = "A Noite estrelada";
"RotorExample.history4" = "E outra de suas pinturas mais famosas, faz parte de uma s√©rie 'Girass√≥is'. Duas cole√ß√µes de pinturas mostrando girass√≥is, e reconhecida tanto por estilo e pelas cores do pintor.";
"RotorExample.sunflower" = "Girass√≥is, por Vincent Van Gogh.";
"RotorExample.note3" = "A primeira cole√ß√£o, executada em Paris 1887, mostra as flores no ch√£o, j√° a segunda parte, pintada depois em Arles, mostra um buqu√™ de flores num vaso.";
"RotorExample.link3" = "Girass√≥is";

// Rotor and Headers

"RotorAndHeaders.title" = "Rotor + T√≠tulos";

"RotorAndHeaders.Rotor.text" = "Se voc√™ n√£o viu ainda, d√™ uma olhada na p√°gina do Rotor para ver mais sobre esse componente!";

"RotorAndHeaders.Header.text1" = "O accessibility trait 'header' √© importante para marcar o come√ßo de uma se√ß√£od e conte√∫do nova, mas, al√©m disso, √© importante notar como isso afeta a forma com que o usu√°rio pode navegar nas p√°ginas usando o Rotor.";
"RotorAndHeaders.Header.text2" = "Se voc√™ n√£o viu a p√°gina do trait 'Header', d√™ uma olhada para aprender mais sobre!";

"RotorAndHeaders.Together.title" = "Mas o que tem esses dois juntos?";
"RotorAndHeaders.Together.text1" = "Se voc√™ ativar o rotor, voc√™ vai notar a op√ß√£o 'Headers/T√≠tulos'";
"RotorAndHeaders.Together.text2" = "Quando selecionada, essa op√ß√£o permite o usu√°rio navegar apenas nos componentes marcados como header, atrav√©s do gesto de deslizar para cima e para baixo na tela.";
"RotorAndHeaders.Together.text3" = "Isso √© extremamente √∫tim para encontrar se√ß√µes espec√≠ficas no meio de muito conte√∫do.";

"RotorAndHeaders.Example.text1" = "Caso voc√™ n√£o tenha notado, essa p√°gina foi feita usando t√≠tulos.";
"RotorAndHeaders.Example.text2" = "Ligue o VoiceOver e tente navegar neles!";

// Navigation

"Navigation.title" = "Navega√ß√£o";
"Navigation.gesturesLink" = "Abrir guia de gestos.";
"Navigation.text1" = "A navega√ß√£o do VoiceOver √© baseada em gestos. Cada gesto pode ser feito em qualquer lugar da tela e vai disparar uma a√ß√£o espec√≠fica.";
"Navigation.text2" = "Quando ativado, o leitor vai mostrar um marcador em cima de qual view ele est√° focado. Este marcador √© chamado 'Cursor'.";
"Navigation.text3" = "Navegar, basicamente significa mudar a posi√ß√£o do cursor, para que ele leia outro elemento.";
"Navigation.text4" = "Para ir para o pr√≥ximo elemento, basta deslizar o dedo horizontalmente na tela da esquerda para a direito, e para voltar, da direita para a esquerda.";
"Navigation.comment" = "Este app foi contru√≠do para suportar o VoiceOver, e o conceito abordado em cada p√°gina dos guias tem um exemplo implementado do t√≥pico, ent√£o voc√™ pode usar o leitor para testar como cada coisa funciona!";
"Navigation.image" = "Acima, um exemplo do Cursor. O t√≠tulo 'Handbook' est√° focado.";
"Navigation.imageSubtitle" = "Exemplo do VoiceOver sendo utilizado.";

"Navigation.MoveAround.title" = "Movimente-se";
"Navigation.MoveAround.text1" = "Quando o VoiceOver estiver ativado, deslize horizontalmente para mudar o focos entre os elementos.";
"Navigation.MoveAround.text2" = "Da esquerda para a direita para o pr√≥ximo, e da direita para a esquerda para o anterior.";

"Navigation.Activate.title" = "Ativar um elemento";
"Navigation.Activate.text" = "Ativar, no VoiceOver, √© o mesmo que clicar num item quando o leitor est√° desativado. Clique duas vezes com um dedo para ativar o elemento focado.";
"Navigation.Activate.comment" = "Voc√™ pode ler mais sobre outras formas de interagir na se√ß√£o 'Intera√ß√£o'";

"Navigation.Footer.title" = "Aprenda mais gestos";
"Navigation.Footer.text1" = "Se voc√™ clicar duas vezes com 4 dedos, o VoiceOver ir√° ativar o 'Guia de Gestos'.";
"Navigation.Footer.text2" = "Agora, cada gesto executado ser√° anunciado pelo leitor, seguido de sua fun√ß√£o. √â uma √≥tima forma de descobrir novas maneiras de interagir com o VoiceOver.";
"Navigation.Footer.text3" = "E para desabilitar, clique duas vezes com 4 dedos novamente!";
"Navigation.Footer.comment" = "Esses s√£o apenas alguns dos gestos dispon√≠vels. Planejamos adicionar uma se√ß√£o mais aprofundada com os gestos no futuro, mas por enquanto, sugerimos que voc√™ experimente usar o leitor de tela e o guia de gestos para descobrir mais!";

// Accessibility Properties

"AccElements.title" = "Propriedades de Acessibilidade";

// Accessibility Element

"AccElem.title" = "Elementos acess√≠veis";
"AccElem.text1" = "Quando usando VoiceOver, o cursor vai focar em 'elementos acess√≠veis'. Esses elementos s√£o identificados pela propriedade 'accessibilityElement' sendo 'True'.";
"AccElem.text2" = "Todo elemento com essa propriedade marcada como true pode ser focado pelo VoiceOver. Elementos marcados como false ser√£o ignorados.";
"AccElem.text3" = "Ligue o VoiceOver e navegue pelos pr√≥ximos elementos. Alguns ser√£o focados e outros n√£o.";
"AccElem.comment" = "√â importante configurar elementos que n√£o devem ser focados corretamente, como separadores ou elementos que n√£o tem 'accessibility labels' como n√£o acess√≠veis.";
"AccElem.comment2" = "Assim, prevenimos conte√∫dos vazios, que podem confundir o usu√°rio, de serem focados.";

"AccElem.example.isAccessibilityElement" = "Este √© um elemento acess√≠vel.";

// Accessibility Label

"AccLabel.title" = "Accessibility Label";
"AccLabel.text1" = "'Accessibility label' √© a propriedade que reflete o conte√∫do que ser√° lido pelo VoiceOver quando o item √© focado.";
"AccLabel.text2" = "Todo elemento focado pelo leitor deveria ter um 'accessibility label'.";
"AccLabel.text3" = "Ligue o VoiceOver e foque no elemento a seguir. O conte√∫do que ser√° lido √© o seu 'accessibility label'.";
"AccLabel.image" = "Noite estrelada, por Vincent Van Gogh. Isto √© um accessibility label!";
"AccLabel.comment" = "Alguns componentes tem o 'accessibility label' configurado automaticamente, como labels e boto√µes, mas voc√™ pode configur√°-los manuelmente se necess√°rio.";
"AccLabel.text4" = "E, algumas vezes, voc√™ pode configurar um 'accessibility label' diferente a uma view como forma de deixar o conte√∫do mais f√°cil de compreender, como descrever unidades de medida ou abrevia√ß√µes.";
"AccLabel.example" = "10Kg";
"AccLabel.accessibilityLabelExample" = "10 Quilos";

// Accessibility Hint

"AccHint.title" = "Accessibility Hint";
"AccHint.text1" = "'Accessibility hints', ou dicas de acessibilidade, s√£o conte√∫dos adicionais lidos ao final de um elemento. S√£o sempre o √∫ltimo conte√∫do a ser lido quando um elemento est√° focado.";
"AccHint.text2" = "S√£o usados para prover informa√ß√µes adicionais sobre um elemento para que o usu√°rio compreenda melhor o conte√∫do ou como interagir com ele.";
"AccHint.text3" = "Por exemplo: Voc√™ tem uma c√©lula com um gesto de 'long press' (que √© um toque triplo com um dedo), voc√™ pode adicionar essa informa√ß√£o no 'accessibility hint' desse componente para descrever essa a√ß√£o adicional.";
"AccHint.comment" = "Hints s√£o opcionais, por isso s√£o deixadas ao final da leitura do componente ent√£o um usu√°rio n√£o precisa ouvir as hints serem lidas caso ele j√° conhe√ßa o fluxo e sabia o que fazer.";

"AccHint.example.hint" = "Toque tr√™s vezes para copiar o c√≥digo do seu pedido.";
"AccHint.example.title" = "Seu pedido";
"AccHint.example.message" = "Batata frita com queijo";
"AccHint.example.footer" = "#123456";
"AccHint.example.notification" = "C√≥digo copiado para √°rea de transfer√™ncia";

// Accessibility Trait

"AccTrait.title" = "Accessibility Trait";
"AccTrait.text1" = "'Accessibility Traits' s√£o modificadores que podem ser adicionados a uma view para alterar seu comportamento ou dar informa√ß√£o adicionar sobre seu comportamento.";
"AccTrait.text2" = "Existem v√°rios traits, alguns talvez voc√™ nunca nem precise usar, e outros s√£o muito poderosos e importantes de se conhecer.";
"AccTrait.text3" = "Na verdade, traits s√£o t√£o importantes que temos uma se√ß√£o dedicada s√≥ para eles!";
"AccTrait.comment1" = "D√™ uma olhada nessa se√ß√£o para ver mais sobre cada trait.";
"AccTrait.text4" = "Adicionar um 'accessibilty trait' a uma view √© muito simples.";

// Accessibility Value

"AccValue.title" = "Accessibility Value";
"AccValue.text1" = "'Accessibility Values' representar o valor (geralmente num√©rico) associado com uma view.";
"AccValue.text2" = "√â mais comumente usado em elementos que representam quantidades, como contadores, sliders ou quick-adds.";
"AccValue.text3" = "E quando alterado, com a view est√° focada, o novo valor ser√° lido pelo leitor.";
"AccValue.comment1" = "D√™ uma olhada no exemplo abaixo, mude a quantidade e note o 'Accessibility Value' sendo lido pelo leitor.";
"AccValue.comment2" = "Este √© um exemplo montado usando o 'Adjustable Trait'.";

// Accessibility Priority

"AccPriority.title" = "Accessibility Priority";

"AccPriority.text1" = "'Accessibility Sort Priority' (ou prioridade de acessibilidade), em SwiftUI, √© uma forma de mudar a ordem de leitura dos elementos lidos pelo VoiceOver";
"AccPriority.text2" = "No UIKit, para ter o mesmo resultado, a ordem de leitura √© definida colocando os elementos na ordem correta no vetor 'accessibilityElements' da view pai.";
"AccPriority.text3" = "Alterar a ordem de leitura pode ser √∫til em algumas situa√ß√µes, d√™ uma olhada no exemplo abaixo:";
"AccPriority.comment1" = "Sim, voc√™ pode alterar a ordem de leitura de elementos, mas a maioria das vezes n√£o √© necess√°rio.";
"AccPriority.comment2" = "De maneira geral, a ordem de leitura recomendada √© a ordem de leitura natural da l√≠ngua selecionada no VoiceOver.";
"AccPriority.comment3" = "Por exemplo, em Portugu√™s, o VoiceOver l√™ o conte√∫do da esquerda para a direita e de cima para baixo. Que j√° √© o comportamento padr√£o do VoiceOver";
"AccPriority.notification" = "Viu como esse bot√£o foi focado depois dos outros elementos, mesmo estando acima deles?";

"AccPriority.Code.uikitComment" = "O conte√∫do √© lido na ordem colocada no vetor.";
"AccPriority.Code.swiftUIComment" = "A maior prioridade √© lida primeiro";

// Accessibility Traits

"AccTraits.title" = "Accessibility Traits";

// List of traits

"ListOfTraits.title" = "Lista de Accessibility Traits";

"ListOfTraits.text1" = "Aqui uma lista completa dos accessibility traits. Alguns tem uma p√°gina de discuss√£o dedicada no app.";
"ListOfTraits.comment1" = "Porque eu acho que s√£o os mais importantes (ou os √∫nicos que eu tive tempo / conte√∫do suficiente pra fazer uma p√°gina dedicada sobre)";
"ListOfTraits.text2" = "Outros s√£o um pouco mais √≥bvios do que fazem, onde devem ser usados e como funcionam.";
"ListOfTraits.comment2" = "Mas d√™ uma olhadinha sim na documenta√ß√£o de cada um!";

"ListOfTraits.button" = "Marca um elemento como sendo um bot√£o, o que basicamente significa que ele pode ser ativado com um duplo clique.";
"ListOfTraits.adjustable" = "Adiciona gestos para alterar quantidades. √â bem √∫til em elementos como sliders, contadores ou quick-adds.";
"ListOfTraits.header" = "Um 'header' (t√≠tulo) pode ser focado com o Rotor, e indica o come√ßo de uma nova se√ß√£o no conte√∫do.";
"ListOfTraits.link" = "Um link para uma p√°gina na internet";
"ListOfTraits.image" = "Uma imagem. Pode n√£o parecer, mas √© importante quando focado numa imagem que ele tenha esse trait, um deficiente visual pode analisar o conte√∫do da imagem com o pr√≥prio VoiceOver caso tenha algo escrito, ou at√© mesmo tirar um print da tela para mostrar para algu√©m.";
"ListOfTraits.searchField" = "√â um campo de busca. Permite digitar conte√∫do e inicia uma pesquisa.";
"ListOfTraits.keyboardKey" = "Uma tecla de teclado. Provavelmente n√£o √© muito relevante a n√£o ser que voc√™ esteja implementando um teclado customizado";
"ListOfTraits.staticText" = "Apenas um texto.";
"ListOfTraits.tabbar" = "Um √≠cone da TabBar.";
"ListOfTraits.summaryElement" = "\"Um elemento acess√≠vel que prov√™ informa√ß√µes quando o app abre.\"";
"ListOfTraits.selected" = "Um item selecionado - usado quando existem mais itens que podem ser selecionados (como segmented controllers, radio buttons...)";
"ListOfTraits.notEnabled" = "A intera√ß√£o com o componente est√° desativada - por exemplo, um bot√£o desabilitado.";
"ListOfTraits.allowsDirectInteraction" = "O elemento permite intera√ß√£o direta para usu√°rios do VoiceOver.";
"ListOfTraits.updatesFrequently" = "O valor da 'accessibility label' muda com frequ√™ncia.";
"ListOfTraits.causesPageTurn" = "Caus uma mudan√ßa autom√°ica de p√°gina quando termina de ler o elemento.";
"ListOfTraits.playsSound" = "Toca um som quando ativado.";
"ListOfTraits.startsMediaSession" = "Come√ßa uma sess√£o de m√≠dia - tocadores de m√∫sica ou de v√≠deo.";

// Button trait

"ButtonTrait.title" = "Button Trait";

"ButtonTrait.text1" = "O trait de bot√£o √©, pra mim, o mais importante dos traits.";
"ButtonTrait.text2" = "Ele basicamente diz pro usu√°rio que ele pode ativar um elemento (com um toque duplo) e que alguma coisa vai acontecer quando ele for ativado.";
"ButtonTrait.text3" = "Se voc√™ est√° usando um Button ou um UIButton, ele vai automaticamente ter o trait de bot√£o.";
"ButtonTrait.text4" = "Mas, algumas vzes, voc√™ precisa adicion√°-lo manualmente, como uma c√©lula que abre uma tela nova, ou qualquer conte√∫do com um gesto de Tap.";

"ButtonTrait.myCell" = "Minha c√©lula";
"ButtonTrait.cellDescription" = "Descri√ß√£o";
"ButtonTrait.additionalInformation" = "Informa√ß√£o adicional";
"ButtonTrait.cellTapped" = "A c√©lula foi clicada";

// Image trait

"ImageTrait.title" = "Image Trait";

"ImageTrait.text1" = "O trait de imagem serve para imagens ou outros elementos visuais que n√£o cont√©m nenhum texto ou a√ß√£o.";
"ImageTrait.text2" = "Se voc√™ est√° usando uma Image ou uma UIImage, ela vai automaticamente ter o trait de imagem. Entretanto, voc√™ pode querer aplicar esse trait tamb√©m em outros elementos que fa√ßam sentido, como, por exemplo, um gr√°fico ou uma anima√ß√£o.";
"ImageTrait.text3" = "Isso far√° o Voice Over identificar e ler o elemento como uma imagem.";

"ImageTrait.description" = "Descri√ß√£o da imagem";


// Summary Element trait

"SummaryElementTrait.title" = "Summary Element Trait";

"SummaryElementTrait.text1" = "O trait de elemento de resumo fornece uma descri√ß√£o resumida da informa√ß√£o mais relevante daquela tela.";
"SummaryElementTrait.text2" = "Um exemplo √© o app de Tempo do iPhone, onde o a view que cont√©m a cidade e temperaturas atuais, no topo da tela, possui essa trait e √© usada como sum√°rio.";
"SummaryElementTrait.text3" = "Esse trait faz o Voice Over ler esse elemento assim que a tela aparece, independente da posi√ß√£o dele na hierarquia da view.";

"SummaryElementTrait.description" = "Essa tela fala sobre summary element traits.";

// Search Field trait

"SearchFieldTrait.title" = "Search Field Trait";

"SearchFieldTrait.text1" = "O trait de campo de busca serve para campos de texto que n√£o s√£o apenas entradas de dados, mas tamb√©m produzem alguma altera√ß√£o visual na tela quando preenchidos.";
"SearchFieldTrait.text2" = "Quando fazemos uma busca textual, √© normal que os resultados dessa busca sejam apresentados em algum lugar da tela.";
"SearchFieldTrait.text3" = "Esse trait permite que o VoiceOver avise que a UI vai mudar em algum lugar.";
"SearchFieldTrait.button" = "Teste esse exemplo!";

"SearchFieldTrait.description" = "Digite o que voc√™ est√° buscando.";
"SearchFieldTrait.AnimalsArray.Bee" = "üêù Abelha";
"SearchFieldTrait.AnimalsArray.Bird" = "ü¶ú Ave";
"SearchFieldTrait.AnimalsArray.Cat" = "üêà Gato";
"SearchFieldTrait.AnimalsArray.Cow" = "üêÑ Vaca";
"SearchFieldTrait.AnimalsArray.Dog" = "üê∂ Cachorro";
"SearchFieldTrait.AnimalsArray.Snake" = "üêç Cobra";

// Adjustable

"Adjustable.title" = "Adjustable trait";

"Adjustable.text1" = "Componentes ajust√°veis est√£o na verdade usando um 'accessibility trait'.";
"Adjustable.text2" = "√â usado em componentes que tem algum tipo de altera√ß√£o de quantidade ou sele√ß√£o de conte√∫do, como quick-adds, sliders ou contadores.";
"Adjustable.text3" = "√â muito poderoso, e, quando focado, um elemento ajust√°vel ganha os gestos de deslizar para cima e para baixo.";
"Adjustable.text4" = "Que podem ser implementados para tratar suas a√ß√µes respectivamente.";

"Adjustable.seeMore" = "Veja mais sobre accessibility traits!";

"Adjustable.Code.increment" = "Tratar incremento";
"Adjustable.Code.decrement" = "Tratar decremento";

// Colors

"ColorsGuide.title" = "Guia de cores";
"ColorsGuide.introduction" = "Introdu√ß√£o";

// About Colors

"AboutColors.title" = "Sobre cores";
"AboutColors.text1" = "Eu gosto de cores.\nMas nem todos as veem da mesma forma.";
"AboutColors.comment1" = "Algumas pessoas n√£o veem cor alguma.";
"AboutColors.text2" = "Cores s√£o como nossos c√©rebros tratam a luz que chega nos nossos olhos, que t√™m c√©lulas que interagem com frequ√™ncias diferentes de luz, e a combina√ß√£o delas gera a cor que n√≥s vemos.";
"AboutColors.comment2" = "Eu estou entrando um pouco em f√≠sica e biologia aqui, mas n√£o desista de mim.";
"AboutColors.text3" = "E quando construindo uma aplica√ß√£o, cores s√£o geralmente algo que tratamos antes de realmente come√ßar a implementar alguma coisa, durante o que eu gosto de chamar de 'O per√≠odo de design'.";
"AboutColors.text4" = "Ent√£o, se voc√™ est√° trabalhando num time com um Designer, eu recomendo levar a discuss√£o sobre cores para seu time! Para entender mais sobre cores, como elas afetam os usu√°rios e como podemos considerar acessibilidade com o uso delas.";
"AboutColors.comment3" = "E se voc√™ n√£o tem um Designer por a√≠... Bom, eu espero que esse conte√∫do possa te ajudar a entender um pouco mais sobre!";
"AboutColors.higColors" = "Human Interface Guidelines - Colors";
"AboutColors.image" = "Uma imagem de cores bonitas";

// Collaboration

"Collaboration.title" = "Colabora√ß√£o";
"Collaboration.OpenSource.title" = "Open Source";
"Collaboration.OpenSource.text1" = "Sim, o Handbook √© um projeto de c√≥digo livre!";
"Collaboration.OpenSource.text2" = "A ideia √© que o app possa ser usado como exemplo, onde se possa ver o c√≥digo, e testar a feature rodando num app de verdade.";
"Collaboration.OpenSource.comment1" = "N√£o √© perfeito, e talvez um pouco estranho em alguns lugares...";
"Collaboration.OpenSource.text3" = "Mas sinta-se a vontade de sugerir edi√ß√µes, mudan√ßas, corrigir alguns bugs e identificar problemas no nosso projeto do GitHub!";
"Collaboration.githubPreoject" = "Veja o projeto no GitHub";
"Collaboration.license" = "Licensa";
"Collaboration.Issue.title" = "Encontrou um problema?";
"Collaboration.Issue.text1" = "Reporte para n√≥s no GitHub!";
"Collaboration.Issue.text2" = "Pode ser um problema de tradu√ß√£o, algo errado na acessibilidade de um component (ningu√©m √© perfeito), ou qualquer coisa!";
"Collaboration.submitIssue" = "Submeta uma issue!";
"Collaboration.Translate.title" = "Nos ajude a traduzir";
"Collaboration.Translate.text1" = "Se voc√™ √© um desencolvedor e gostaria de levar o Handbook mais pr√≥ximo da sua comunidade local, considere nos ajudar a traduzir o conte√∫do para outras l√≠nguas!";
"Collaboration.Translate.text2" = "Voc√™ pode abrir um PR no GitHub traduzindo o conte√∫do.";
"Collaboration.Translate.comment" = "Eu sei que √© bastante coisa... mas quanto mais melhor!";
"Collaboration.submitPR" = "Submeta um Pull Request com suas mudan√ßas!";
"Collaboration.Suggestion.title" = "Quer ver algo espec√≠fico?";
"Collaboration.Suggestion.text1" = "Talvez voc√™ tenha algo que queria saber mas n√£o encontrou aqui";
"Collaboration.Suggestion.text2" = "Ou gostaria de sugerir um jogo novo?";
"Collaboration.Suggestion.text3" = "Fique a vontade para nos trazer qualquer ideia!";
"Collaboration.submitFeatureRequest" = "Submeta um pedido de feature!";

// About the app

"AboutTheApp.title" = "Sobre o app";

"AboutTheApp.History.text1" = "O 'Accessibility Handbook' come√ßou como uma ideia com alguns colegas de trabalho e amigos, para ser uma maneira f√°cil de aprender e testar features de acessibilidade em iOS.";
"AboutTheApp.History.text2" = "Com o passar do tempo, trabalhamos na ideia, mas nunca chegamos a terminar de fato. Agora, puxamos de novo o projeto, reescrevendo o conte√∫do em SwiftUI, mas com exemplos em UIKit e SwiftUI, tentando trazer algo realmente legal para ser usado por todo mundo.";
"AboutTheApp.History.text3" = "Eu sempre achei que informa√ß√£o sobre acessibilidade sempre esteve por a√≠, mas voc√™ tinha que saber exatamente o que procurar.";
"AboutTheApp.History.text4" = "Ent√£o √© a√≠ que entra o 'Handbook', √© algo f√°cil de acessar, colaborativo e r√°pido de encontrar! E √© um app! Algo que voc√™ carrega pra todo lado.";
"AboutTheApp.History.text5" = "√â baseado em experi√™ncias de desenvolvedores com situa√ß√µes de verdade, e eu espero que ajude voc√™ a compreender mais sobre o tema e aplicar nos seus pr√≥prios projetos!";

"AboutTheApp.Game.title" = "E sobre os Jogos?";
"AboutTheApp.Game.text1" = "O Guia em si √© muito legal e tudo mais... mas era meio chato.";
"AboutTheApp.Game.text2" = "Ent√£o, tentamos trazer algo que ajudasse a compreender melhor o conte√∫do,";
"AboutTheApp.Game.text3" = "E qual a melhor forma de se afzer isso do que com um jogo?";
"AboutTheApp.Game.comment" = "O sdesafios n√£o s√£o feitos para serem dif√≠ceis, mas uma forma de for√ßar voc√™ a entender como habilitar e utilizar diversas op√ß√µes de acessibilidade, e claro, praticar o seu conhecimento!";

"AboutTheApp.Disclaimer.title" = "Disclaimer";
"AboutTheApp.Disclaimer.text1" = "O app e o conte√∫do foi feito para ser um guia, baseado em esperi√™ncias reais.";
"AboutTheApp.Disclaimer.text2" = "N√£o sabemos TUDO sobre acessibilidade, e estamos aprendendo mais a cada dia.";
"AboutTheApp.Disclaimer.comment1" = "E com certeza aprendemos muito enquanto desenvolvendo esta aplica√ß√£o.";
"AboutTheApp.Disclaimer.text3" = " Podem haver problemas e at√© solu√ß√µes melhores do que as explicadas aqui. E caso voc√™ as encontre, considere reportar para a gente!";
"AboutTheApp.Disclaimer.text4" = "Gostar√≠amos que o guia fosse uma ferramente confi√°vel no dia-a-dia do seu desenvolvimento.";
"AboutTheApp.Disclaimer.openCollaborationPage" = "D√™ uma olhada na p√°gina sobre colabora√ß√£o para ver outras formas de ajudar o projeto!";

"AboutTheApp.Review.text" = "Avalie o Guia na AppStore!";
"AboutTheApp.Review.button" = "Fa√ßa uma avalia√ß√£o";
"AboutTheApp.language" = "O Guia est√° dispon√≠vel em Portug√™s do Brasil e Ingl√™s dos Estados Unidos. Mude sua prefer√™ncia de idioma nas configura√ß√µes do dispositivo.";

// Color blindness

"ColorBlind.title" = "Daltonismo";
"ColorBlind.About.text1" = "Daltonismo √© o nome dado a habilidade reduzida de enxergar ou perceber diferen√ßas em cores.";
"ColorBlind.About.text2" = "O que voc√™ pode n√£o saber, √© que existem 'n√≠veis de daltonismo'. Uma pessoa com defici√™ncia de vis√£o da cor verde pode n√£o ver essa cor por completo ou apenas um pouco menos que as outras pessoas.";
"ColorBlind.About.text3" = "Voc√™ pode fazer um Teste de Ishihara para verificar se voc√™ √© dalt√¥nico. Eu tenho uma amiga que descobriu quando est√°vamos na faculdade! E antes disso, eu esperava que fosse descoberto quando voc√™ fosse mais jovem, mas foi uma maneira de mostrar que a condi√ß√£o pode aparecer e manifestar de maneiras diferentes na vida de cada pessoa.";
"ColorBlind.About.ishihara" = "Exemplo de um teste de Ishihara.";
"ColorBlind.About.comment" = "A imagem acima √© de um teste de Ishihara. Para uma pessoa de vis√£o 'normal', √© esperado que se veja os n√∫mero '12', '6' e '74', respectivamente.";
"ColorBlind.About.text4" = "Mas como isso afeta quando voc√™ est√° fazendo um app?";
"ColorBlind.About.ishiharaTest" = "Teste de Ishihara";

"ColorBlind.Handle.title" = "Tratando conte√∫do considerando Daltonismo";
"ColorBlind.Handle.text1" = "Primeiro, garanta que o seu conte√∫do n√£o dependa apenas de cores para diferenciar informa√ß√µes. Observe o exemplo a seguir.";
"ColorBlind.Handle.text2" = "Aqui, na primeira coluna, estamos usando apenas a cor vermelha para marcar itens negativos, e cor verde para os itens positivos. Mas isso √© exatamente o que queremos evitar. A segunda coluna tem uma informa√ß√£o mais 'universal', onde identificamos itens positivos e negativos pela cor mas tamb√©m pelo uso de √≠cones associados ao conte√∫do.";
"ColorBlind.Handle.comment1" = "Usar os √≠cones + e - e at√© mesmo cores vermelho e verde tem conota√ß√µes culturais e pode variar de acordo com cada localidade. Mas aqui √© s√≥ um exemplo mesmo.";
"ColorBlind.Handle.comment2" = "Se voc√™ tem um conte√∫do que depende apenas de cores para ser identificado no seu app, e n√£o consegue ou n√£o quer alterar a forma como ele √© apresentado para o p√∫blico geral, mas ainda que dar suporta para as pessoas que s√£o dalt√¥nicas, d√™ uma olhada na p√°gina 'Differentiate without colors'.";

"ColorBlind.Images.title" = "Cuidado com imagens";
"ColorBlind.Images.text1" = "As vezes, apresentamos conte√∫dos que est√£o dentro de imagens. Baners que vieram do backend, informa√ß√µes promocionais, ou alguma coisa que foi montada para aparecer melhor na imagem.";
"ColorBlind.Images.comment" = "Primeiro, adicione um texto alternativo 'accessibility label' √† imagem!";
"ColorBlind.Images.text2" = "Voc√™ temb√©m tem que tomar cuidado para que o conte√∫do exibido n√£o tenha cores conflitantes para usu√°rios dalt√¥nicos.";

// Contrast

"Contrast.title" = "Contraste";
"Contrast.text1" = "Contraste √© a diferen√ßa de luminosidade or cor que faz com que um objeto (ou a sua representa√ß√£o em uma imagem ou tela) distingu√≠vel.";
"Contrast.comment1" = "Mas porque falar de contraste quando estamos falando de acessibilidade?";
"Contrast.text2" = "Contraste √© importante quando considerando as cores da sua aplica√ß√£o. Tudo que √© apresentado deveria ser... bom, vis√≠vel.";
"Contrast.text3" = "E por isso, queremos dizer que voc√™ tem que tomar cuidado ao adicionar conte√∫do que deve ser lido em cores sobre outras cores. A base do contraste √© sempre o texto preto no fundo branco (ou o texto brando no fundo preto - Dark Mode).";
"Contrast.comment2" = "Mas isso tamb√©m depende da fonte que voc√™ est√° usando, do peso e do tamanho dela.";

"Contrast.Example.text1" = "Uma forma legal de testar o contraste, √© usando o guia do WCAG.";
"Contrast.Example.comment1" = "WCAG significa 'Web Content Accessibility Guidelines' (Guia de conte√∫do de acessibilidade para Web), e mesmo sendo direcionado para navegadores de internet e n√£o diretamente para ambientes mobile, √© uma √≥tima refer√™ncia de acessibilidade de maneira geral, especialmente na parte de contraste.";
"Contrast.Example.example1" = "O exemplo acima falha o teste de contraste do WCAG.";
"Contrast.Example.example2" = "Este exemplo √© mais ou menos, voc√™ pode usar essa combina√ß√£o de cores com fontes maiores, por exemplo.";
"Contrast.Example.example3" = "E esse contraste √© muito bom! O cl√°ssico preto-no-branco.";
"Contrast.Example.link" = "Voc√™ pode tentar voc√™ mesmo com essa ferramenta online de teste de contraste!";

// Differentiate without colors

"Differentiate.title" = "Diferenciar sem cores";

"Differentiate.Intro.text1" = "O 'Differentiate Without Colors' (ou, diferenciar sem cores), √© uma forma com que o usu√°rio pode pedir para n√£o usar apenas cores para diferenciar conte√∫dos.";
"Differentiate.Intro.text2" = "No c√≥digo, isso se resume a um Booleano que voc√™ pode checar para ver se essa op√ß√£o de acessibilidade est√° ativada ou n√£o.";
"Differentiate.Intro.comment1" = "Apesar que, na maioria das vezes, √© uma boa pr√°tica adotar como comportamento padr√£o que o seu conte√∫do n√£o dependa apenas de cores para ser identificado. Este √© o tipo de problema que pode ser previnido com boas discuss√µes equanto montando designs e layouts para suas aplica√ß√µes, antes mesmo de come√ßar a implementar.";
"Differentiate.Intro.text3" = "Esta op√ß√£o pode ser abilitada nas configura√ß√µes do dispositivo, na se√ß√£o de acessibilidade.";
"Differentiate.Intro.text4" = "Aqui, um exemplo cl√°ssico, o jogo do fio! Onde voc√™ tem que conectar os fios de cores iguais nos lados opostos da tela.";
"Differentiate.Intro.text5" = "Ao adicionar √≠cones nos fios, voc√™ garante que eles coneguem ser diferenciados n√£o s√≥ pelas cores.";
"Differentiate.Intro.image" = "Imagem do jogo Among Us usando multiplos filtros de daltonismo.";
"Differentiate.Intro.comment2" = "Um bom exemplo √© o jogo 'Among Us'. Na imagem acima, em ordem, est√£o aplicados os filtros de  Deuteranopia, Protanopia e Tritanopia. Esses nomes estranhos s√£o tipos diferentes de daltonismo.";

"Differentiate.Handle.text1" = "Para verificar se a op√ß√£o est√° habilitada, voc√™ pode usar 'UIAccessibility.shouldDifferentiateWithoutColor'";
"Differentiate.Handle.text2" = "E voc√™ pode tamb√©m usar a notifica√ß√£o dessa propriedade com o Notification Center para pegar mudan√ßas nesse valor.";
"Differentiate.Handle.text3" = "E em SwiftUI, voc√™ pode usar uma 'Environment property' (vari√°vel de ambiente) com o mesmo objetivo.";

// Color acc feature

"ColorAccessibilityFeatures" = "Op√ß√µes de acessibilidade com cores";

// Reduce Transparency

"ReduceTransparency.title" = "Reduzir Transpar√™ncias";

"ReduceTransparency.Intro.text1" = "Esta √© uma op√ß√£o de acessibilidade que pode ser habilitada nas configura√ß√µes do dispositivo.";
"ReduceTransparency.Intro.text2" = "Quando ligada, o usu√°rio pede para que sua aplica√ß√£o reduza a quantidade de blur e transpar√™ncias usadas.";
"ReduceTransparency.Intro.comment" = "Algumas pessoas podem ter dificuldade de enxergar ou ler conte√∫dos com transpar√™ncias!";

"ReduceTransparency.Example.text1" = "Tente ligar e desligar essa op√ß√£o e obervar o conte√∫do abaixo.";
"ReduceTransparency.Example.example" = "Text transparente\nem cima de um background 'borrado'.";

"ReduceTransparency.Code.text1" = "E √© muito f√°cil de tratar!";
"ReduceTransparency.Code.text2" = "No UIKit, voc√™ precisa checkar um booleano no UIAcessibility.";
"ReduceTransparency.Code.text3" = "E, claro, voc√™ tamb√©m pode observar a notifica√ß√£o dessa mesma propriedade para tratar caso ela seja alterada, usando o Notification Center.";
"ReduceTransparency.Code.text4" = "E em SwiftUI voc√™ pode usar uma vari√°vel de ambiente!";

// Invert Colors

"InvertColors.title" = "Inverter cores";

"InvertColors.Intro.text1" = "Inverter cores √© outra op√ß√£o de acessibildiade que pode ser habilitada nas configura√ß√µes do seu dispositivo.";
"InvertColors.Intro.text2" = "Existem 2 tipos de invers√£o no iOS:";
"InvertColors.Intro.text3" = "Cl√°ssica - onde tudo ser√° invertido;";
"InvertColors.Intro.text4" = "Inteligente - onde (quase) tudo em light mode ser√° invertido, e voc√™ (desenvolvedor) pode escolher se ser√° inves√≠vel ou n√£o.";
"InvertColors.Intro.comment1" = "Mas por que algu√©m usaria isso?";
"InvertColors.Intro.text5" = "Acredito que recaia na dificuldade as vezes de ler conte√∫dos de texto preto sobre o fundo branco. (Eu mesmo sem √≥culos prefiro ler texto com a fonte branca sobre o fundo preto).";
"InvertColors.Intro.text6" = "A invers√£o de cores √© uma alternativa para ajudar nesse cen√°rio.";

"InvertColors.WhatToDo.title" = "O que fazer enquanto desenvolvedor?";
"InvertColors.WhatToDo.text1" = "Voc√™ basicamente precisa marcar o que voc√™ n√£o quer que seja invertido. Como imagens, uma foto do seu cachorro, uma foto de um hamb√∫rguer que ficaria bem esquisito quando invertido...";
"InvertColors.WhatToDo.text2" = "E, para isso, voc√™ precisa simplesmente configurar um booleano nas propriedades da sua view, marcando que voc√™ n√£o que que ela seja invertida.";

"InvertColors.Example.text1" = "Altere o seu display entre light/dark mode e ative e desative a invers√£o de cores nas configura√ß√µes do seu dispositivo e veja o comportamento das imagens abaixo.";
"InvertColors.Example.image1" = "Noite estrelada, por Van Gogh";
"InvertColors.Example.image2" = "Noite estrelada, por Van Gogh. Esta imagem est√° marcada para n√£o ser invertida.";
"InvertColors.Example.comment" = "Apenas a segunda imagem est√° marcada para n√£o ser invertida.";

// Header Trait

"HeaderTrait.title" = "Header Trait";
"HeaderTrait.text1" = "O trait de Header (ou t√≠tulo) √© usado para marcar t√≠tulos, que indicam uma nova se√ß√£o de conte√∫do.";
"HeaderTrait.comment1" = "S√≥ isso?";
"HeaderTrait.text2" = "A parte legal, √© que voc√™ pode navegar apenas nos headers usando o Rotor.";
"HeaderTrait.link" = "Mais sobre Rotores";
"HeaderTrait.text3" = "Dessa forma, voc√™ pode passar todo o conte√∫do at√© encontrar a se√ß√£o que voc√™ procura.";

// Increase Contrast

"IncreaseContrast.title" = "Aumentar contraste";

"IncreaseContrast.Intro.text1" = "Outra op√ß√£o de acessibilidade que pode ser ativada nas configura√ß√µes do seu dispositivo.";
"IncreaseContrast.Intro.text2" = "O nome meio que j√° entrega, quando ativada, o usu√°rio est√° pedindo que o contraste aumente entre o seu conte√∫do e o plano de fundo, de forma que seja mais f√°cil de distinguir entre eles.";

"IncreaseContrast.Property.title" = "Tratando mudan√ßas de contraste";
"IncreaseContrast.Property.text1" = "Uma forma simples de suportar isso √© usandoa s cores do sistema. Elas v√£o alterar automaticament quando essa op√ß√£o for alterada.";
"IncreaseContrast.Property.comment1" = "Este app foi contru√≠do usando cores do sistema! Mude suas op√ß√µes de contraste e veja as diferen√ßas!";
"IncreaseContrast.Property.text2" = "Ou voc√™ pode usar o 'UIAccessibility.accessibilityDisplayShouldIncreaseContrast' booleano para verificar o estado atual dessa op√ß√£o.";

"IncreaseContrast.swiftUI.text1" = "E em SwiftUI, existe um modificador muito interessante que altera o contraste de suas views.";
"IncreaseContrast.swiftUI.comment1" = "N√£o que eu j√° tenha usado ela na vida real, mas ainda assim √© bem interessante.";

"IncreaseContrast.example" = "Exemplo de uso do modificador de contrast. S√£o 6 imagens onde o contraste aumente progressivamente.";

// Haptics

"Haptic.text1" = "Haptics √© o nome chique das vibra√ß√µs que o seu dispositivo pode fazer.";
"Haptic.text2" = "Existem v√°rios tipos de Haptics, e cada um representa algo diferente.";
"Haptic.comment1" = "Mas... por que estamos falando de vibra√ß√µes num guia de acessibildiade?";
"Haptic.text3" = "Haptics s√£o um tipo de feedback. Quando voc√™ seleciona algo, quando algo d√° errado...";
"Haptic.text4" = "√â uma camada a mais de informa√ß√£o. Imagine que a maioria das a√ß√µes podem produzir uma anima√ß√£o, uma mudan√ßa de cor para chamar a aten√ß√£o do usu√°rio, quando clicamos num bot√£o ele muda ligeiramente de cor para dar a impress√£o que est√° sendo pressionado.";
"Haptic.text5" = "Mas n√£o podemos depender de dicas visuais com todos os usu√°rios, ent√£o os Haptics podem ser muito √∫teis em acompanhar esse tipo de feedback, se tornando uma camada a mais de acessibilidade.";

"HapticList.title" = "Lista de Haptics";
"HapticList.text1" = "Aqui uma lista de todos os Haptics dispon√≠veis:";
"HapticList.comment" = "Eu tamb√©m sugiro que voc√™ d√™ uma olhada no c√≥digo fonte desse projeto, que tem uma solu√ß√£o legal para disparar os diversos tipos de Haptics.";
"HapticList.sourceCode" = "C√≥digo fonte";
"HapticList.iPadDisclaimer" = "Haptics n√£o est√£o dispon√≠veis em iPads. Os bot√µes abaixo podem n√£o funcionar no seu dispositivo atual.";

"Haptics.selection" = "Sele√ß√£o";
"Haptics.success" = "Sucesso";
"Haptics.error" = "Erro";
"Haptics.warning" = "Alerta";
"Haptics.lighImpact" = "Impacto leve";
"Haptics.mediumImpact" = "Impacto m√©dio";
"Haptics.heavyImpact" = "Impacto forte";

// Activate

"Activate.title" = "Ativar elemento";
"Activate.text1" = "Ativar um elemento (clique duplo quando o VoiceOver est√° ativado) √© o mesmo que clicar quando n√£o se est√° usando o leitor de tela.";
"Activate.comment1" = "Clicar num bot√£o, numa c√©lula...";
"Activate.text2" = "Na maioria das vezes, esta a√ß√£o acontece automaticamente se o seu componente tem um gesto de Tap ou √© um bot√£o.";
"Activate.text3" = "Mas voc√™ pode personalizar ou adicionar a√ß√µes espec√≠ficas para este gesto.";
"Activate.codeComment" = "Tratar ativa√ß√£o";

// Long Press

"LongPress.title" = "Long Press";
"LongPress.comment1" = "Long press?";
"LongPress.text1" = "'Long press' n√£o √© um gesto de acessibilidade propriamente dito, mas eu gosto de adicionar essa parte porque ele tem um gesto pr√≥prio no VoiceOver.";
"LongPress.text2" = "Para simular um 'Long Press' de um toque triplo com um dedo no item focado.";
"LongPress.text3" = "Ligue o VoiceOver e foque no elemento a seguir, ele tem um gesto de long press.";
"LongPress.comment2" = "Se voc√™ est√° usando um gesto de long press, eu sugiro que adicione um 'Accessibility Hint' para avisar o seu usu√°rio dessa intera√ß√£o!";
"LongPress.text4" = "O 'long press' √© especialmente √∫til nos bot√µes de voltar da barra de navega√ß√£o. No iOS, ele mostra oda a hierarquia de navega√ß√£o, facilitando voltar para a p√°gina que voc√™ est√° procurando.";

"LongPress.Example.text" = "Alguma view gen√©rica aqui";
"LongPress.Example.hint" = "Toque tr√™s vezes para copiar o texto";
"LongPress.Example.notification" = "Texto copiado para √°rea de transfer√™ncia";

"LongPress.Code.comment" = "Tratar gesto";

// Custom Actions

"CustomActions.title" = "A√ß√µes Customizadas";
"CustomActions.text1" = "A√ß√µes customizadas, ou 'Custom Actions', √© o nome da habilidade de adicinar m√∫ltiplas a√ß√µes em um √∫nico elemento acess√≠vel. Quando focado, o leito vai ler 'a√ß√µes dispon;iveis' ao final, o que significa que voc√™ pode deslizar o dedo para cima ou para baixo na tela para escolher a a√ß√£o que ser√° executada quando o elemento for ativado.";
"CustomActions.comment1" = "Mas, quando eu usaria isso?";
"CustomActions.text2" = "√â uma √≥tima ferramenta para melhorar a acessibilidade de elementos que pode fazer v√°rias a√ß√µes.";
"CustomActions.text3" = "Como uma c√©lula de cart√£o que pode selecionar, deletar ou editar o cart√£o salvo.";
"CustomActions.text4" = "Geralmente, voc√™ tem m√∫ltiplos bot√µes, um para cada a√ß√£o, mas focar em cada um deles separadamente n√£o √© uma boa experi√™ncia de VoiceOver.";
"CustomActions.comment2" = "Eu acho que as a√ß√µes customizadas s√£o uma maneira muito √∫til de deixar acess√≠veis a√ß√µes que ficam escondidas atr√°s de anima√ß√µes, como quando voc√™ clica num √≠cone de edi√ß√£o e ent√£o aparecem outros √≠cones com mais op√ß√µes.";

"CustomActions.creditCard" = "Cart√£o de Cr√©dito";
"CustomActions.accessible" = "Cart√£o de Cr√©dito, terminado em 1234";

// Magic Tap

"MagicTap.title" = "Magic Tap";
"MagicTap.text1" = "O 'Magic Tap', ou Toque M√°gico, √© um gesto de clique duplo com dois dedos.";
"MagicTap.text2" = "Voc√™ pode configurar o 'Magic Tap' para executar qualquer a√ß√£o.";
"MagicTap.text3" = "A documenta√ß√£o da Apple sugere que ele seja usado como um atalho para a fun√ß√£o principal da sua aplica√ß√£o, como dar play/pause em um reprodutor de m√∫sica, ou tirar uma foto num app de c√¢mera.";
"MagicTap.text4" = "Teste o Magic Tap na view abaixo.";
"MagicTap.comment1" = "Quando implementando o 'Magic Tap', garanta que ele est√° habilitado na view focada, caso contr√°rio, ele compete com o reprodutor de m√≠dia do dispositivo, j√° que o mesmo gesto √© usado para dar play/pause de maneira global.";

"MagicTap.Example.thisContentIsMagic" = "Este conte√∫do tem um Magic Tap!";
"MagicTap.Example.magicPerformed" = "Magic tap executado";

"VoiceOverGuide" = "Guia do VoiceOver";

// Accessibility Notifications

"AccNotifications.title" = "Notifica√ß√µes de Acessibilidade";

// Announcement

"Announcement.title" = "An√∫ncio";
"Announcement.textToBeRead" = "Texto a ser lido";

"Announcement.text1" = "Uma notifica√ß√£o de an√∫ncio, ou 'announcement notification', √© uma forma de fazer o VoiceOver ler algo que n√£o est√° focado no momento.";
"Announcement.text2" = "As vezes, alguma informa√ß√£o muda na tela, e mostramos pro usu√°rio com alguma anima√ß√£o para puxar a sua aten√ß√£o.";
"Announcement.text3" = "Mas, n√£o podemos depender de dicas visuais quando estamos falando de acessibilidade de defici√™nia visual.";
"Announcement.comment1" = "√â aqui que os an√∫ncios brilham! Ler mudan√ßas de conte√∫do na tela mas que n√£o est√£o focadas no momento.";
"Announcement.comment2" = "Os exemplos de c√≥digo abaixo tamb√©m s√£o exemplos de an√∫ncios quando voc√™ copia o c√≥digo usando long press com o VocieOver habilitado.";

"Announcement.Notifications.negative" = "Indo negativo n√£o √©?";
"Announcement.Notifications.small" = "Os valores est√£o aumentando!";
"Announcement.Notifications.medium" = "Voc√™ gosta de aumentar, n√£o?";
"Announcement.Notifications.large" = "Isso, continue assim...";
"Announcement.Notifications.huge" = "Perto do fim agora";
"Announcement.Notifications.final" = "Esta √© a mensagem final.";

// Notify Screen changes

"NotifyChanges.title" = "Notificar mudan√ßas na tela";
"NotifyChanges.text1" = "Quando algo muda na tela, precisamos lembrar que um usu√°rio de VoiceOver n√£o ser√° capaz de ver essa altera√ß√£o.";
"NotifyChanges.text2" = "Isso tamb√©m vale pra quando a pr√≥pria tela muda.";
"NotifyChanges.text3" = "Mas, temos notifica√ß√µes de acessibilidade para dizer ao usu√°rio o que aconteceu.";
"NotifyChanges.comment1" = "O que √© o argumento 'nil' no exemplo?";
"NotifyChanges.comment2" = "Descubra mais na p√°gina a seguir!";

"NotifyChanges.screenChange" = "Notifica√ß√£o de mudan√ßa da tela";
"NotifyChanges.layoutChange" = "Notifica√ß√£o de mudan√ßa de layout";

// Change cursor position

"ChangeCursor.title" = "Mudar a posi√ß√£o do cursor";

"ChangeCursor.Intro.text1" = "Na maioria das vezes, queremos que o usu√°rio controle por completo para onde o cursor do VoiceOver vai se mover.";
"ChangeCursor.Intro.text2" = "Quando mudamos algo na tela, como apresentar um modal em cima de todo o conte√∫do, queremos redirecionar o usu√°rio corretamente para esse novo conte√∫do.";
"ChangeCursor.Intro.comment" = "Mas, para isso, funciona um pouco diferente em UIKit e SwiftUI, ent√£o vamos separa as duas abordagens aqui.";

"ChangeCursor.uikit.text1" = "Para mudar a posi√ß√£o do cursor em UIKit, usamos as notifica√ß√µes de mudan√ßa de tela.";
"ChangeCursor.uikit.text2" = "Quanto disparadas uma dessas notifica√ß√µes, podemos passar uma view como argumento, o que vai fazer com que o leitor mude o foco para essa view.";
"ChangeCursor.uikit.link" = "Mais sobre notifica√ß√µes de mudan√ßa de tela.";

"ChangeCursor.swiftui.text1" = "Em SwiftUI, n√£o vamos usar notifica√ß√µes, mas sim o @AccessibilityFocusState";
"ChangeCursor.swiftui.text2" = "Ele permite saber se o cursor est√° focado numa view espec√≠fica, e mover a nevage√ß√£o pra ela caso necess√°rio.";
"ChangeCursor.swiftui.text3" = "Primeiro, criar um novo Booleano usando esse 'property wrapper'.";
"ChangeCursor.swiftui.text4" = "Depois, associe-o a sua view usando um 'modifier'.";
"ChangeCursor.swiftui.text5" = "Agora, voc√™ pode mudar o foco pra essa view setando esse bolleano para 'True'.";
"ChangeCursor.swiftui.comment" = "Voc√™ pode at√© observar mudan√ßas nessa propriedade para tratar alguma quando quando sua view for focada/desfocada pelo leitor.";

// Content Hierarchy

"ContentHiererachy" = "Hierarquia de conte√∫do";

// Modal

"Modal.title" = "Modais";

"Modal.Intro.text1" = "Modais (Modal Views), nesse caso, estamos falando de views que s√£o exibidas acima de outros conte√∫dos na tela. Baners, pop-ups, bot√µes flutuantes...";
"Modal.Intro.text2" = "O problema √©: O VoiceOver vai tentar manter a order de leitura natural a l√≠ngua atual, e mesmo se houver outra view acima das demais, ele pode focar no conte√∫do que est√° atras dessa view, e at√© mesmo ignor√°-la por completo!";
"Modal.Intro.text3" = "Para previnir esse problema, podemos marcar uma view como sendo um Modal. Isso faz com que o leitor foque apenas nessa view enquanto ela estiver vis√≠vel.";
"Modal.Intro.comment1" = "Mas tratar modais tamb√©m √© diferente em UIKit e SwiftUI.";
"Modal.Intro.link" = "Leia mais sobre ordem de leitura dos componentes.";

"Modal.uikit.text1" = "No UIKit, toda UIView tem a propriedade 'accessibilityViewIsModal'. E s√≥ precisamos marc√°-la como 'True' para dizer que √© um modal.";
"Modal.uikit.text2" = "Mas, na minha experi√™ncia, apenas setar essa propriedade as vezes n√£o tem o comportamento esperado.";
"Modal.uikit.text3" = "Eu sugiro dar um override nessa propriedade na sua view modal, e ent√£o retornar o valor esperado.";

"Modal.swiftui.text1" = "Em SwiftUI o Modal pode ser setado da mesma forma que um 'accessibility trait'.";

"Modal.example.text1" = "Ative o VoiceOver e analise os modais abaixo.";
"Modal.example.goodModal" = "Modal bom";
"Modal.example.thisGoodModal" = "Este √© um bom exemplo de modal.";
"Modal.example.badModal" = "Modal ruim";
"Modal.example.thisBadModal" = "Este √© um modal ruim. N√£o configurado como modal.";
"Modal.example.comment" = "Percebeu que ao abrir o modal bom, o cursor focou diretamente nele? √â importante mudar a navega√ß√£o do seu cursor para o modal quando ele √© exibido sobre o restante do conte√∫do da tela.";
"Modal.example.link" = "Veja mais sobre isso na se√ß√£o sobre notifica√ß√µes - Mudando a posi√ß√£o do cursor.";

// Grouping

"Grouping.title" = "Agrupar elementos";
"Grouping.text1" = "Agrupar elementos corretamente √© uma das partes mais importantes de ter uma tela acess√≠vel.";
"Grouping.text2" = "Imagine o cen√°rio: Um carrosel de c√©lulas, quando usando o VoiceOver, queremos que cada c√©lula seja focada individualmente e n√£o focar em cada subview da c√©lula, mas sim ela como um todo.";
"Grouping.comment" = "Pode parece √≥bvio, mas √© f√°cil de esquecer desse ponto durante o desenvolvimento.";
"Grouping.text3" = "Ligue o VoiceOver e foque nos dois carross√©is abaixo, um tem o conte√∫do das c√©lulas corretamente agrupado e o outro n√£o.";

"Grouping.goodCarousel" = "Carrossel Bom";
"Grouping.badCarousel" = "Carrossel ruim";
"Grouping.cellTitle" = "T√≠tulo";
"Grouping.cellContent" = "Conte√∫do";
"Grouping.cellComment" = "Coment√°rio";

"Grouping.uikit.text" = "No UIKit, voc√™ precisa deixar a view pai como sendo um elemento acess√≠vel, e n√£o as views filhas. Ent√£o, combin√°-los para montar o conte√∫do correto da 'accessibility label' do pai.";
"Grouping.swiftui.text" = "SwiftUI tem um 'View Modifier' que simplifica bastante desse trabalho de agrupar as views filhas em um √∫nico 'accessible element'.";

// Game Success

"GameSuccess.title" = "Parab√©ns!";
"GameSuccess.subtitle" = "Voc√™ resolveu o desafio!";
"GameSuccess.text" = "Se voc√™ quiser saber mais sobre como o jogo foi montado, n√£o deixe de ver nossa documenta√ß√£o:";
"GameSuccess.suggestedReading" = "Leitura sugerida";

// Hint View

"Hint" = "Dica";
"Hint.hint" = "Abrir uma dica sobre este jogo.";
"Hint.close" = "Fechar dica";
"Hint.open" = "Abrir dica";
"Hint.title" = "ü§î Tendo dificuldades?";
"Hint.text1" = "Os jogos do Handbook foram feitos para serem resolvidos com alguma ferramenta de acessibilidade (ou uma combina√ß√£o delas).";
"Hint.text2" = "Se voc√™ n√£o conseguir descobrir, talvez esta p√°gina possa ajudar...";

// Games

"GameView.comment" = "Jogue para aprender mais sobre acessibilidade!";

"GameCell.finishedHint" = "Voc√™ j√° terminou este daqui!";
"GameCell.unfinishedHint" = "Voc√™ ainda n√£o terminou este jogo.";

"WhereIsMyContent.title" = "Cad√™ o texto?";
"WhereIsMyContent.text1" = "Esse jogo √© f√°cil.";
"WhereIsMyContent.text2" = "Voc√™ precisa encontrar o bot√£o correto usando o VoiceOver!";

"FindThePassword.title" = "Encontre a senha";
"FindThePassword.text1" = "Digite a senha correta!";
"FindThePassword.text2" = "√â s√≥ isso";
"FindThePassword.comment" = "Voc√™ s√≥ tem que descobrir qual a senha...";

"BePatient.title" = "Paci√™ncia";
"BePatient.text" = "Toque nos elementos na ordem correta!";
"BePatient.comment" = "Paci√™ncia √© a chave.";

"Impostor.title" = "Impostor";
"Impostor.text" = "Encontre o impostor e digite o nome dele!";
"Impostor.comment" = "Pergunta l√°, talvez eles digam alguma coisa.";
"Impostor.field" = "Digite o nome do impostor";
"Impostor.hint" = "Eu n√£o sou o impostor.";
"Impostor.impostor" = "Sim, eu sou o impostor.";

"Invisibility.title" = "Invisibilidade";
"Invisibility.text" = "S√≥ porque VOC√ä n√£o consegue ver, n√£o significa que n√£o est√° l√°.";
"Invisibility.comment" = "Espera... Esse conte√∫do √© TRANSPARENTE?";
"Invisibility.transparent" = "Espera... Esse conte√∫do √© TRANSPARENTE?";

"Impostor2.title" = "Impostor 2.0";
"Impostor2.text" = "Encontre o impostor e digite o nome dele!";
"Impostor2.comment" = "Pergunta l√°, talvez eles digam alguma coisa.";
"Impostor2.field" = "Digite o nome do impostor";

"TheMagicPuzzle.title" = "Quebra cabe√ßa 'M√°gico'";
"TheMagicPuzzle.text" = "Esse jogo √© m√°gico!";
"TheMagicPuzzle.comment" = "Eu n√£o sei o que mais te dizer...";

"SecretActions.title" = "A√ß√µes secretas";
"SecretActions.text" = "Alimente cada animal com a comida correta!";
"SecretActions.comment" = "N√£o se preocupe, eles v√£o dizer do que gostam.";
"SecretActions.Action.apples" = "Dar ma√ß√£s";
"SecretActions.Action.grass" = "Dar grama";
"SecretActions.Action.bubbles" = "Dar bolhas";
"SecretActions.Action.nectar" = "Dar N√©ctar";

"FillTheCup.title" = "Copo cheio";
"FillTheCup.text" = "Encha os c√≠culos at√© o final!";
"FillTheCup.comment" = "Voc√™ s√≥ tem que encontrar uma forma de fazer isso";

"AColorfulMessage.title" = "Uma mensagem 'Colorida'";
"AColorfulMessage.text" = "Digite a senha correta!";
"AColorfulMessage.comment" = "√â uma senha de 6 d√≠gitos";

"TheUpsideDown.title" = "O mundo invertido";
"TheUpsideDown.text1" = "Talvez haja uma maneira de ver...";
"TheUpsideDown.text2" = "Ai, eu to t√£o invertida!";

"SuperFriend.title" = "Super amigo";
"SuperFriend.text" = "Todos aqui s√£o muito amig√°veis,";
"SuperFriend.comment" = "Encontre a pessoa com o maior n√∫mero de amigos!";
"SuperFriend.field" = "Nome do super amigo";

"IncreasingHints.title" = "Aumentando dicass";
"IncreasingHints.text" = "Voc√™ consegue ler as dicas? Use-as para encontrar a senha correta.";
"IncreasingHints.hint1" = "Est√° tudo t√£o pequeno... Eu n√£o lembro o que eu ia dizer.";
"IncreasingHints.hint2" = "A primeira dica precisa ser um pouco maior...";
"IncreasingHints.hint3" = "O segundo n√∫mero √© 3. E talvez voc√™ consiga encontrar outras dicas?";
"IncreasingHints.hint4" = "O primeiro n√∫mero √© 2 a menos que o segundo.";
"IncreasingHints.hint5" = "T√° ficando grande! O √∫ltimo n√∫mero √© 4.";
"IncreasingHints.hint6" = "O terceiro n√∫mero √© o mesmo do primeiro.";
"IncreasingHints.hint7" = "O quarto n√∫mero √© o dobro do segundo.";
"IncreasingHints.hint8" = "O n√∫mero faltante √© o mesmo que o √∫ltimo!";
"IncreasingHints.unspecified" = "Estou perdido... n√£o sei o que dizer.";

"AnAlternative.title" = "Uma alternativa";
"AnAlternative.text" = "Voc√™ precisa alternar entre... alguma coisa... e ativar os elementos na ordem correta.";

// Actions

"doubleTapToCopy" = "Toque duas vezes para copiar";
"appleDoc" = "Ô£ø Veja mais na documenta√ß√£o da Apple para \"%@\"";
"nextPage" = "Pr√≥xima p√°gina %@";
"backToIndex" = "Voltar ao √≠ndice";
"goPlay" = "V√° jogar!";
"moreOnWikipedia" = "Mais na Wikipedia";
"more" = "Mais";
"moreOnTheWeb" = "Veja mais na internet";
"dedicatedPage" = "P√°gina dedicada";
"select" = "Selecionar";
"delete" = "Deletar";
"edit" = "Editar";
"selected" = "Selecionado";
"deleted" = "Deletado";
"edited" = "Editado";
"handleAction" = "Tratar a√ß√£o";
"dismiss" = "Fechar";
"goBack" = "Voltar";
"tapToWin" = "Toque para vencer";
"tapToChange" = "Toque para alterar";

// Code

"codeCopied" = "C√≥digo copiado!";
"copyCode" = "Copiar c√≥digo";
"closeCodeView" = "Fechar c√≥digo";
"codeExample" = "exemplo de c√≥digo %@";
"codeHint" = "Toque duas vezes para ver o c√≥digo em tela cheia, ou toque tr√™s vezes parta copiar.";

// Some nouns

"freeShipping" = "Entrega gr√°tis";
"additionalCost" = "Custo adicional";
"earlyAccess" = "Acesso antecipado";
"extraBureaucracy" = "Burocracia extra√ü";
"regularText" = "Texto normal";
"boldText" = "Texto em negrito";
"openSettings" = "Abrir configura√ß√µes";
"haptic" = "Haptic";
"haptics" = "Haptics";
"moon" = "Lua";
"cloud" = "Nuvem";
"sun" = "Sol";
"sunrise" = "Nascer do Sol";
"snow" = "Neve";
"rain" = "Chuva";
"fog" = "Neblina";
"weatherIcons" = "√çcones de Clima";
"interactrion" = "Intera√ß√£o";
"uikit" = "UIKit";
"swiftUI" = "SwiftUI";
"modal" = "Modal";
"example" = "Exemplo";
"examples" = "Exemplos";
"lobster" = "Lagosta";
"pumpkin" = "Ab√≥bora";
"iceCream" = "Sorvete";
"flag" = "Bandeira";
"potato" = "Batata";
"password" = "Senha";
"puzzles" = "Jogos";
"unfinishedPuzzles" = "Jogos em aberto";
"completedPuzzles" = "Jogos terminados";
"pencil" = "L√°pis";
"paper" = "Papel";
"paperPlane" = "Avi√£o de papel";
"book" = "Livro";
"bell" = "Sino";
"minimum" = "M√≠nimo";
"maximum" = "M√°ximo";

// Gestures

"Gestures.title" = "Guia de Gestos";

"Gestures.text1" = "Aqui um guia inicial de como usar alguns dos gestos do VoiceOver.";

"Gestures.swipeRight.description" = "Mover o cursor para o pr√≥ximo elemento.";
"Gestures.swipeLeft.description" = "Mover o cursor para o elemento anterior";
"Gestures.swipeUp.description" = "Mudar filtro do Rotor / Aumentar elemento ajust√°vel / Mudar a√ß√£o customizada";
"Gestures.swipeDown.description" = "Mudar filtro do Rotor / Diminuir elemento ajust√°vel / Mudar a√ß√£o customizada";
"Gestures.singleTap.description" = "Ler elemento";
"Gestures.doubleTap.description" = "Ativar elemento, o mesmo que clicar quando o VoiceOver est√° desativado.";
"Gestures.tripleTap.description" = "Gesto de 'Long press'";
"Gestures.twoFingersSingleTap.description" = "Pausar/continuar leitura. Voc√™ pode fazer o VoiceOver pausar a leitura atual e depois retom√°-la, usando o mesmo gesto.";
"Gestures.twoFingersDoubleTap.description" = "Executar o 'Magic Tap'.";
"Gestures.twoFingersSwipeUp.description" = "Ler do topo. Move o cursor para o come√ßo da tela.";
"Gestures.twoFingersSwipeDown.description" = "Ler tudo. Come√ßa a ler o conte√∫do automaticamente.";
"Gestures.threeFingersSwipeUp.description" = "Scroll para baixo.";
"Gestures.threeFingersSwipeDown.description" = "Scroll para cima.";
"Gestures.threeFingersSwipeLeft.description" = "Scroll para a direita.";
"Gestures.threeFingersSwipeRight.description" = "Scroll para a esquerda.";
"Gestures.threeFingersSingleTap.description" = "Resumo do item. L√™ tamb√©m a posi√ß√£o do cursor na tela.";
"Gestures.threeFingersDoubleTap.description" = "Mutar/Desmutar o leitor.";
"Gestures.threeFingersTripleTap.description" = "Ligar/Desligar cortina de fuma√ßa. Desliga a tela do aparelho com o VoiceOver ainda executando.";
"Gestures.fourFingersDoubleTap.description" = "Ajuda de Gestos. Quando ativo, ir√° descrever cada gesto performado.";
"Gestures.helper" = "Ajuda de gestos";
"Gestures.reading" = "Leitura";
"Gestures.dismiss.description" = "Gesto de fechar conte√∫do. Fecha modais ou volta pra p√°gina anterior na navega√ß√£o.";

"Gesture.swipeRight" = "Swipe para direita";
"Gesture.swipeLeft" = "Swipe para esquerda";
"Gesture.swipeUp" = "Swipe para cima";
"Gesture.swipeDown" = "Swipe para baixo";
"Gesture.singleTap" = "Toque √∫nico";
"Gesture.doubleTap" = "Toque duplo";
"Gesture.tripleTap" = "Toque triplo";
"Gesture.twoFingersSingleTap" = "Toque √∫nico com 2 dedos";
"Gesture.twoFingersDoubleTap" = "Toque duplo com 2 dedos";
"Gesture.twoFingersSwipeUp" = "Swipe para cima com 2 dedos";
"Gesture.twoFingersSwipeDown" = "Swipe para baixo com 2 dedos";
"Gesture.threeFingersSwipeUp" = "Swipe para cima com 3 dedos";
"Gesture.threeFingersSwipeDown" = "Swipe para baixo com 3 dedos";
"Gesture.threeFingersSwipeLeft" = "Swipe para esquerda com 3 dedos";
"Gesture.threeFingersSwipeRight" = "Swipe para direita com 3 dedos";
"Gesture.threeFingersSingleTap" = "Toque √∫nico com 3 dedos";
"Gesture.threeFingersDoubleTap" = "Toque duplo com 3 dedos";
"Gesture.threeFingersTripleTap" = "Toque triplo com 3 dedos";
"Gesture.fourFingersDoubleTap" = "Toque duplo com 4 dedos";
"Gesture.dismiss" = "'Z' with 2 fingers.";

"Gesture.accessible" = "Animation representing the gesture for %@";

// Dynamic Fonts

"DynamicFonts.title" = "Fontes din√¢micas";
"DynamicFonts.implementing" = "Implementando fontes din√¢micas";

// Fonts section

"Fonts.title" = "Fontes";

// AboutFonts

"AboutFonts.title" = "Sobre fontes";
"AboutFonts.Intro.comment1" = "Fontes s√£o legais.";
"AboutFonts.Intro.text1" = "Uma 'fonte' √© um tipo, tamanho, peso e estilo particular de um texto. Eu gosto de pensar como se fosse o 'desenho' de cada caracter.";
"AboutFonts.Intro.text2" = "Voc√™s est√° nesse momento lendo um texto, escrito em uma fonte espec√≠fica.";
"AboutFonts.Intro.comment2" = "Esta √© a fonte padr√£o do sistema iOS, SF Pro.";
"AboutFonts.Intro.text3" = "Existem in√∫meras fontes. Centenas de centenas de milhares. E podemos decidir usar uma fonte customizada na nossa aplica√ß√£o, talvez por se encaixar melhor no nosso conte√∫do, ou talvez seja parte da identidade global da sua marca.";
"AboutFonts.Intro.text4" = "Mas a fonte √© como apresentamos conte√∫do diretamente pro usu√°rio. E a maioria das vezes espeamos que os usu√°rios sejam capazes de LER o conte√∫do. Ent√£o, a maneira como a fonte √© apresentada √© extremamente importante.";
"AboutFonts.Intro.text5" = "O b√°sico √©: O texto tem que ser leg√≠vel.";
"AboutFonts.Intro.comment3" = "Mas j√° estabelecemos que nem todo mundo percebe conte√∫do ou cores da mesma forma.";
"AboutFonts.Intro.text6" = "E em segundo: Queremos que todos, que possam ler, consigam ler nosso conte√∫do.";
"AboutFonts.Intro.comment4" = "E √© a√≠ que acessibilidade come√ßa a ficar interessante";
"AboutFonts.link" = "Veja mais fontes online.";

// UIContentSizeCategory

"UIContentSizeCategory.title" = "UIContentSizeCategory";
"UIContentSizeCategory.Intro.text1" = "O 'UIContentSizeCategory' √© um enum do sistema que representa o tamanho preferido de fontes selecionado pelo usu√°rio.";
"UIContentSizeCategory.Intro.text2" = "Ele tem 12 op√ß√µes diferentes de tamanho, de extra pequeno at√© extra extra extra grande. E ent√£o, os 'tamanhos de acessibilidade' de 'accessibility medium' at√© 'accessibility extra extra extra large' (Isso mesmo, 3 extras).";
"UIContentSizeCategory.Intro.comment1" = "Os tamanhos de acessibilidade s√£o maiores que os demais, mesmo que o nome do menos deles seja 'accessibility medium', ele ainda √© maior que o tamanho 'extra extra extra grande'.";

"UIContentSizeCategory.List.title" = "Lista de UIContentSizeCategory";
"UIContentSizeCategory.List.text1" = "Aqui segue uma lista de todos os tamanhos dispon√≠veis no sistems. Voc√™ pode ver a p√°gina 'Identificar tamanho de fonte selecionado' para mais informa√ß√µes.";
"UIContentSizeCategory.List.comment1" = "Mas, no c√≥digo, geralmente n√£o devemos verificar qual o tamanho esperado da fonte, apenas deixar que ele escale nosso conte√∫do corretamente, seja usando o UIFontMetric ou as fontes definidas do sistema.";
"UIContentSizeCategory.List.current" = "Este √© o seu 'content size' atual.";

"UIContentSizeCategory.Code.text1" = "Voc√™ pode verificar o tamanho das fontes do sistema usando o c√≥digo a seguir.";

"fontSize" = "Tamanho da fonte: %@";

// Size And Weight

"SizeAndWeight.title" = "Peso e Tamanho";

// Implementing dynamic fonts

"ImplementingDynamicFonts.title" = "Escalando fontes automaticamente";
"ImplementingDynamicFonts.Intro.text1" = "Escalar fontes automaticamente √© a capacidade de uma Label ou Text de aumentar o tamanho da sua fonte automaticamente de aocrdo com a configura√ß√£o de acessibilidade do usu√°rio.";
"ImplementingDynamicFonts.Intro.comment1" = "Isso √© o que chamamos de 'Fontes din√¢micas'.";
"ImplementingDynamicFonts.Intro.text2" = "Para suportar isso, temos que parar de usar tamanhos fixos de fontes, e come√ßar a trabalhr com 'estilos de texto'.";
"ImplementingDynamicFonts.Intro.comment2" = "No exemplo acima, estamos usando uma fonte de tamanho fixo (36), que n√£o vai servir caso queiramos que ela escale automaticamente de tamanho.";

"ImplementingDynamicFonts.TextStyles.title" = "Estilos de texto";
"ImplementingDynamicFonts.TextStyles.text1" = "Extilos de text, ou 'Text styles', representam um contexto onde sua fonte pode ser usada (corpo do texto, t√≠tulo, legenda...).";
"ImplementingDynamicFonts.TextStyles.text2" = "O tamanho da fonte ser√° definido de acordo com a configura√ß√£o do dispositivo, e ser√° diferente para cada tamanho de fonte selecionado.";
"ImplementingDynamicFonts.TextStyles.comment1" = "Ent√£o, n√£o se preocupe, seu conte√∫do ter√° diferen√ßas de tamanho entre t√≠tulos, corpos, legendas e quaisquer outros estilos de texto que voc√™ esteja usando.";
"ImplementingDynamicFonts.TextStyles.text3" = "Al√©m disso, se a propriedade 'adjustsFontForContentSizeCategory' estiver configurada como `False`, a fonte vai estar do tamanho correto quando for exibida, mas n√£o vai se ajustar automaticamente caso ocorram mudan√ßas no tamanho do texto enquanto est√° sendo exibida.";

"ImplementingDynamicFonts.SystemFonts.title" = "Fontes do sistema";
"ImplementingDynamicFonts.SystemFonts.text1" = "A maneira mais f√°cil de suportar fontes din√¢micas √© usando fontes e estilos do sistema.";
"ImplementingDynamicFonts.SystemFonts.text2" = "Eles v√£o funcionar de maneira transparente com as mudan√ßas de tamanho de fonte nas configura√ß√µes do dispositivo.";
"ImplementingDynamicFonts.SystemFonts.comment1" = "A parte mais complicada √© suportar o mesmo comportamento com fontes customizadas. Iremos discutir melhor nas p√°ginas seguintes este assunto.";

// UIFontMetrics

"UIFontMetrics.title" = "UIFontMetrics";

"UIFontMetrics.Intro.text1" = "UIFontMetrics √© a solu√ß√£o para suportar escalar automaticamente fontes customizadas. Voc√™ cria um objeto de 'metrics' que especifica o estilo de fonte que voc√™ quer usar.";
"UIFontMetrics.Intro.text2" = "Depois, voc√™ carrega a sua fonte e a escala usando o UIFontMetrics.";
"UIFontMetrics.Intro.comment1" = "Garanta que sua fonte √© leg√≠vel tanto em tamanhos menores como maiores! Legibilidade √© a chave em todo tamanho de fonte.";

// AdjustLayoutToScaledFontPage

"AdjustLayoutToScaledFontPage.title" = "Ajustar o layout para fontes aumentadas";

"AdjustLayoutToScaledFontPage.Intro.text1" = "A parte mais dif√≠cil de suportar fontes din√¢micas √©: \"Garantir que o seu layout cuidadosamente planejado para um tamanho de texto n√£o quebre.\"";
"AdjustLayoutToScaledFontPage.Intro.text2" = "Precisamos considerar o que vai acontecer quando mudarmos o tamanho da fonte.\nO conte√∫do vai ter uma quebra de linha?\nParte dele n√£o ficar√° mais vis√≠vel?\nA view que cont√©m o texto ir√° aumentar de tamanho?";
"AdjustLayoutToScaledFontPage.Intro.comment1" = "Esconder parte do conte√∫do, de maneira geral, nunca √© uma boa solu√ß√£o. Ent√£o, precisamos estudar e conhecer as abordagens para garantir que tudo funciona e continua leg√≠vel com todos os tamanhos de contes.";
"AdjustLayoutToScaledFontPage.Intro.comment2" = "Isso √© muito importante de discutir com o seu time de design! üòâ";
"AdjustLayoutToScaledFontPage.Intro.text3" = "Observe os exemplos a seguir e altere o tamanho do texto nas configura√ß√µes do seu dispositivo. Depois volte e veja como cada um se comporta com um tamanho de fonte diferente.";

"AdjustLayoutToScaledFontPage.FixedSize.title" = "Tamanho Fixo";
"AdjustLayoutToScaledFontPage.FixedSize.text1" = "A regra principal √©: Evitar tamanhos fixos o m√°ximo poss√≠vel. Quando a fonte aumentar, o layout provavelmente n√£o ir√° quebrar, mas o conte√∫do escrito pode ser suprimido, e talvez n√£o sej aposs√≠vel de ser lido.";

"AdjustLayoutToScaledFontPage.LineBreak.title" = "Quebra de linha";
"AdjustLayoutToScaledFontPage.LineBreak.text1" = "Ao permitir que o texto tenha quebra de linha, voc√™ pode exibir qualquer conte√∫do, independente do tamanho da fonte. O problema √©: Aumentar o tamanho vertical do seu layout.";
"AdjustLayoutToScaledFontPage.LineBreak.comment1" = "Garanta que esse √© o comportamento esperado! As vezes, n√£o queremos que as nossas c√©lulas ou grupos cres√ßam muito de tamanho, pois isso tamb√©m pode quebrar nosso layout.";

"AdjustLayoutToScaledFontPage.ScaleSize.title" = "Escalar at√© um limite";
"AdjustLayoutToScaledFontPage.ScaleSize.text1" = "Another option, is allowing your content to scale it's size up to a limit so it doesn't break the layout (that much).";
"AdjustLayoutToScaledFontPage.ScaleSize.comment1" = "Eu acho que √© uma boa solu√ß√£o, de maneira geral, pareada com o uso de quebras de linha. Mas sempre teste sua aplica√ß√£o com diferentes varia√ß√µes de tamanho.";

"AdjustLayoutToScaledFontPage.AllowTextToIncrease.title" = "Permitir que o texto controle o tamanho do conte√∫do";
"AdjustLayoutToScaledFontPage.AllowTextToIncrease.text1" = "Na maioria das vezes, o texto n√£o define o tamanho das nossas views. Quando est√° dentro de uma c√©lula, ou associado a uma imagem, esses outros componentes costumam definir as dimens√µes exibidas.";
"AdjustLayoutToScaledFontPage.AllowTextToIncrease.text2" = "Para suportar fontes din√¢micas, voc√™ pode ajustar o seu layout para escalar junto com o tamanho da fonte, de uma forma que tudo se matenha coeso.";
"AdjustLayoutToScaledFontPage.AllowTextToIncrease.comment1" = "Essa √© a parte mais cimplicada, voc√™ precisa implementar o layout j√° considerando as mudan√ßas de dimens√£o do text (e testar com diferentes tamanhos tamb√©m), e visualizar onde pode quebrar caso o texto aumente e ajustar o comportamento do layout corretamente.";
"AdjustLayoutToScaledFontPage.AllowTextToIncrease.comment2" = "Nesse caso, tamb√©m seria legal configurar um tamanho m√≠nimo pro conte√∫do, no caso de uma fonte menor que o esperado.";

"AdjustLayoutToScaledFontPage.WhatOption.title" = "Qual op√ß√£o eu devo usar?";
"AdjustLayoutToScaledFontPage.WhatOption.text1" = "Bom, a√≠ que est√° a quest√£o. Depende. Depende de onde est√° o texto, de como ele vai mudar outros componentes na tela (nossas c√©lulas podem ficar mais largas?\nDevemos usar quebras de linhas?)";
"AdjustLayoutToScaledFontPage.WhatOption.comment1" = "Por isso √© extremamente complicado suportar fontes din√¢micas com um app j√° pronto e em produ√ß√£o. Literalmente tudo pode quebrar.";
"AdjustLayoutToScaledFontPage.WhatOption.text2" = "Mas, assim como suportar leitores de tela no seu conte√∫do, implementar fontes din√¢micas √© um trabalho de grupo. Converse com seus designers, com o time de produto, com outros desenvolvedores, e questione \"O que deveria acontecer caso a fonte fossse maior?\" e traga as pessoas mais pr√≥ximas da discuss√£o e j√° considere esses pontos enquanto voc√™ implementa novos layouts.";

"AdjustLayoutToScaledFontPage.Example.title" = "T√≠tulo do conte√∫do";
"AdjustLayoutToScaledFontPage.Example.body" = "Corpo do texto com mais conte√∫do";
"AdjustLayoutToScaledFontPage.Example.description" = "Descri√ß√£o aqui embaixo";

// IdentifyCurrentPreferredFontSize

"IdentifyCurrentPreferredFontSizePage.title" = "Identificar tamanho de fonte selecionado";

"IdentifyCurrentPreferredFontSizePage.Intro.text1" = "Quando selecionando um tamanho de fonte nas configura√ß√µes do dispositivo, m√∫ltiplas op√ß√µes est√£o dispon√≠veis.";
"IdentifyCurrentPreferredFontSizePage.Intro.text2" = "Mesmo sem habilitar as op√ß√µes de acessibilidade, √© poss√≠vel selecionar um tamanho de fonte preferido que √© diferente do padr√£o.";
"IdentifyCurrentPreferredFontSizePage.Intro.text3" = "Voc√™ pode querer identificar qual o tamanho de fonte preferido selecionado no momento, e voc√™ pode fazer isso observandp 'preferredContentSizeCategory' do 'UIApplication'.";

"IdentifyCurrentPreferredFontSizePage.Variations.title" = "Varia√ß√µes";
"IdentifyCurrentPreferredFontSizePage.Variations.text1" = "Quando as op√ß√µes de acessibilidade est√£o desabilitadas, os tamanhos variam de extra pequeno a extra extra extra grande.";
"IdentifyCurrentPreferredFontSizePage.Variations.text2" = "E quando as op√ß√µes de acessibilidade est√£o habilitadas, eles variam de 'accessibility medium' at√© 'accessibility large'.";
"IdentifyCurrentPreferredFontSizePage.Variations.text3" = "O problema √©: O 'accessibility medium' √© maior que o valor (sem acessibilidade), extra extra extra grande, o que pode ser muito confuso.";
"IdentifyCurrentPreferredFontSizePage.Variations.comment1" = "O conte√∫do abaixo √© a recria√ß√£o do seletor de tamanho de conte√∫do na configura√ß√£o do sispositivo. Mova o seletor e veja como as fontes mudam.";

"IdentifyCurrentPreferredFontSizePage.Example.toggle" = "Tamanhos de Acessibilidade maiores";
"IdentifyCurrentPreferredFontSizePage.List.title" = "Lista de exemplos";

// Dismiss

"DismissPage.title" = "Escape";
"DismissPage.text1" = "O VoiceOver tem um gesto dedicado para fechar Modais e outros conte√∫dos: O 'Ecape'.";
"DismissPage.comment1" = "Voc√™ pode tentar executar esse gesto aqui mesmo! Fa√ßa um 'Z' com 2 dedos na tela.";

"DismissPage.Handle.text1" = "No UIKit, voc√™ pode adicionar um tratamento customizado implementando o m√©todo de 'perform escape'.";
"DismissPage.Handle.text2" = "J√° em SwiftUI, √© a mesma maneira de adicionar um 'Magic Tap', mas usando o tipo `escape`.";

// Reduce Motion

"motion" = "Movimento";
"ReduceMotion.title" = "Reduzir anima√ß√µes";

"ReduceMotion.Intro.text1" = "√Äs vezes, adicionamos movimento ou anima√ß√µes nas nossas views. √â uma forma de apresentat algo de maneira mais legal, uma transi√ß√£o de tela, ou qualquer outra coisa.";
"ReduceMotion.Intro.text2" = "O problema √©: Algumas pessoas podem ficar desconfort√°veis quando vendo anima√ß√µes no uso de aplica√ß√µes.";
"ReduceMotion.Intro.text3" = "√â por isso que o iOS tem op√ß√µes de acessibilidade para permitir os usu√°rios pedirem aos apps que reduzam anima√ß√µes.";

"ReduceMotion.Disclaimer.text1" = "A documenta√ß√£o da Apple sugere que, caso essa op√ß√£o esteja ativada, elementos da interface devem evitar anima√ß√µes grandes, especialmente aquelas que usam efeitos 3D.";
"ReduceMotion.Disclaimer.comment1" = "Mas de maneira geral, devemos remover todas as anima√ß√µes customizadas, efeitos de paralaxe ou transi√ß√µes de tela adicionais.";
"ReduceMotion.Disclaimer.text2" = "V√° at√© as configura√ß√µes do dispositivo e mude a op√ß√£o de 'Reduzir anima√ß√µes', ent√£o, obverve os exemplos abaixo.";

"ReduceMotion.simpleAppearance" = "Pequenas anima√ß√µes podem ser desativadas, mesmo que n√£o seja necess√°rio.";
"ReduceMotion.simpleAppearance.text" = "Abrir mais op√ß√µes";

"ReduceMotion.cardFlip" = "O exemplo acima uma uma anima√ß√£o 3D para virar o cart√£o. Este ;e um bom exemplo de onde devemos desativar as anima√ß√µes caso esta feature esteja habilitada.";
"ReduceMotion.cardFlip2" = "√â um bom exemplo tamb√©m de onde usar a√ß√µes customizadas para melhorar acessibilidade de leitores de tela!";

// PreferCrossFade

"PreferCrossFadePage.title" = "Preferir transi√ß√µes cross-fade";

"PreferCrossFadePage.text1" = "Esta √© uma op√ß√£o adicional dentro do 'Reduzir anima√ß√µes'.";
"PreferCrossFadePage.text2" = "Quando ativado, transi√ß√µes de tela devem ser reduzidas e alteradas para um cross-fade, ao inv√©s de anima√ß√µes onde a tela se move at√© o lugar esperado.";
"PreferCrossFadePage.text3" = "Essa op√ß√£o tamb√©m altera o comportamento padr√£o da NavigationView ou de NavigationStacks sem precisar fazer mudan√ßas adicionais no c√≥digo.";
"PreferCrossFadePage.comment1" = "Este app foi constru;ido uma navigation stack padr√£o, v√° at√© as configura√ß√µes do seu dispositivo, altere esta op√ß√£o de acessibilidade e volte. Depois, navegue entre as telas do app e veja que a anima√ß√£o ter√° mudado para um cross-fade.";
"PreferCrossFadePage.text4" = "Voc√™ tamb√©m pode verificar se esta op√ß√£ est√° habilitada para fazer tratamentos manuais nas suas anima√ß√µes..";
"PreferCrossFadePage.comment2" = "Quando ativado, tamb;em signifca que a op√ß√£o 'Reduzir anima√ß√µes' tamb√©m est√° ativada.";

// WhatIsDarkMode

"darkMode" = "Dark mode";
"lighMode" = "Light mode";
"youAreCurrentlyOn" = "Voc√™ est√° no: %@";

"WhatIsDarkMode.title" = "O que √© 'Dark Mode'?";

"WhatIsDarkMode.Intro.text1" = "Modo escuro, ou 'Dark mode', √© a habilidade de mudar a interface para uma apar√™ncia mais escura. Onde, geralmente, as cores de fundo consistem em cores escuras sobrepostas por conte√∫do em cores mais claras.";
"WhatIsDarkMode.Intro.comment1" = "A exist√™ncia de um modo escuro implica na exist√™ncia o modo claro, ou 'light mode', que √© o oposto do modo escuro - cores de fundo claras com elementos escuros na frente.";
"WhatIsDarkMode.Intro.text2" = "√Äs vezes, √© uma prefer√™ncia est√©tica para o usu√°rio. No MacOS pode ser configurado para alternar entre os temas de acrodo com condi√ß√µes do ambiente de luminosidade.";
"WhatIsDarkMode.Intro.text3" = "Mas, al√©m disso, suportar o Dark mode pode ser uma forma de acessibilidade. Os usu√°rios podem preferir a leitura de conte√∫do claso no fundo escuro, especialmente em ambientes de pouca luz.";
"WhatIsDarkMode.Intro.comment2" = "Voc√™ pode ler mais na p√°gina sobre Inverter socres para mais informa√ß√µes.";

"WhatIsDarkMode.DoINeedIt.title" = "Preciso ter um modo escuro?";
"WhatIsDarkMode.DoINeedIt.text1" = "√Äs vezes, sua interface n√£o precisa suportar o modo escure. Tallvez seja um jogo que tem a interface com cores especificamente selecionadas, ou a cor do conte√∫do tem um papel maior na compreens√£o da sua aplica√ß√£o.";
"WhatIsDarkMode.DoINeedIt.text2" = "Mas quando estamos falando de apps que, em sua maioria, s√£o conte√∫do escrito, que o usu√°rio precisa ler para compreender e entender, ou usam branco como a cor padr√£o de cundo, s√£o bons exemplos de apps que poderiam suportar o modo escuro.";
"WhatIsDarkMode.DoINeedIt.text3" = "Talvez para dar a escolha est√©tica, mas tamb√©m suportar aqueles que preferem o modo escuro para legibilidade do conte√∫do ou melhorar a leitura em ambientes de baixa luminosidade.";

"WhatIsDarkMode.ThisAppSupports.title" = "Este app suporta o dark mode!";
"WhatIsDarkMode.ThisAppSupports.text1" = "O Handbook suporta o modo escuro. Se voc√™ est√° usando um dispositivo iOS, voc√™ pode mudar sua apar√™ncia nas configura√ß√µes do disposiivo.";
"WhatIsDarkMode.ThisAppSupports.text2" = "Ou usar o centro de controle (o menu que voc√™ puxa para baixo do canto superior direito) como um atalho. D√™ um 'long press' nas op√ß√µes de luminosidade da sua tela, e ele ir√° mostrar a op√ß√£o de alternar entre os modos claro e escuro.";
"WhatIsDarkMode.ThisAppSupports.text3" = "E se voc√™ est√° usando um simulador iOS no Mac, voc√™ pode mudar a apar√™ncia rapidamente usando um atalho no teclado.";
"WhatIsDarkMode.ThisAppSupports.command" = "Command + shift + A";
"WhatIsDarkMode.ThisAppSupports.comment1" = "Eu recomendo fortemente ler a documenta√ß√£o da Applu no 'Human Interface Guidelines' sobre Dark Mode.";
"WhatIsDarkMode.ThisAppSupports.image" = "Exemplo do centro de controle depois de um long press nas op√ß√µes de luminosidade do display.";

// Appearances

"Appearances.title" = "Mudan√ßas de apar√™ncia";

"Appearances.Intro.text1" = "Neste contexto, 'apar√™ncias' √© o grupo de poss√≠veis esquema de cor da interface que o usu√°rio pode selecionar. Atualmente: Claro ou Escuro.";
"Appearances.Intro.text2" = "Podemos identifica qual destes o usu√°rio tem selecionado e ajustar nosso conte√∫do de acordo.";

"Appearances.Code.title" = "Identifica esquema de cores";
"Appearances.Code.text1" = "Em SwiftUI, √© t√£o f√°cil quanto usar uma vari√°vel de ambiente. Ent√£o, sua UI ser√° automaticamente notificada quando um usu√°rio mudar essa configura√ß√£o e ir√° atualizar a sua interface automaticamente.";
"Appearances.Code.text2" = "E, claro, em UIKit as coisas s√£o um pouco mais complicadas. Voc√™ vai precisar usar o objeto de 'UITraitCollection'.";
"Appearances.Code.comment1" = "A grande diferen√ßa √© a exist√™ncia de um caso `unspecified` no enum 'UIUserInterfaceStyle', (porque √© claro que ele existe), mas nesse caso, voc√™ pode usar o 'unspecified' como o seu esquema padr√£o de cores.";
"Appearances.Code.text3" = "E, para suportar mudan√ßas din√¢micas no esquema de cores com seua aplica√ß√£o aberta, voc√™ precisa ouvir as mudan√ßas no trait collection, e atualizar sua interface quando ela mudar o esquema de cores.";

"Appearances.supportingDarkMode" = "Suportando o modo escuro";

// Dynamic Content

"DynamicContent.title" = "Assets Din√¢micos";
"DynamicContent.Intro.text1" = "Quando falamos sobre suportar o modo escuro, n√£o estamos falando apenas de cores, mas outros conte√∫dos podem ser adaptados para esquema de cores diferentes.";
"DynamicContent.Intro.text2" = "Aqui vamos discutir melhor assets, em especial imagens, mas o mesmo se aplica para assets de cores.";

"DynamicContent.XCTAssets.title" = "XCAssets";
"DynamicContent.XCTAssets.text1" = "Quando usando o XCAssets no Xcode, eles prov√©m op√ß√µes para adicionar assets diferentes para esquemas de cores distintos, al√©m de m√∫ltiplos assets para dimens√µes diferentes de tela.";
"DynamicContent.XCTAssets.text2" = "Especialmente quando imagens tem uma cor de fundo, ou s√£o dif√≠ceis de serem vistas no seu esquema de cores atual, voc√™ pode adicionar variantes nessas imagens para cada esquema de cor.";
"DynamicContent.XCTAssets.image1" = "Acima, est√° uma imagem do cat√°logo de assets do Xcode. Quando selecionando um asset de imagem, no painel direito voc√™ pode mudar as op√ß√µes de 'Appearance', ou apar√™ncia, que voc√™ pode habilitar para adicionar imagens diferentes para os modos claro e escuro.";
"DynamicContent.XCTAssets.text3" = "Quando mudando entre os modos claro/escuro, se voc√™ est√° suando os assets no XCTAssets, as imagens ir√£o mudar automaticamente para a vers√£o correta da sua interface.";
"DynamicContent.XCTAssets.text4" = "O exemplo acima foi constru√≠do usando XCTAssets, e tem varia√ß√µes diferentes para cada esquema de cor. ude entre os modos claro e escuro e veja como eles se comportam.";

// Tintable images

"TintableImages.title" = "'Tintable images'";
"TintableImages.TintableImages.text1" = "Voc√™ n√£o precisa necessariamente ter 2 assets com cores diferentes para cada esquema de cor. Uma outra op√ß√£o √© usar 'tintable images' (numa tradu√ß√£o literal seria 'imagens color√≠veis', mas √© uma refer√™ncia a propriedade 'tintColor' das 'UIImageViews'). Isso significa adicionar uma imagem como 'template', e definir a sua cor depois, programaticamente.";
"TintableImages.TintableImages.text2" = "Da documenta√ß√£o da Apple:";
"TintableImages.TintableImages.citation1" = "Quando voc√™ adicionar uma imagem como template a um bot√£o ou image view, voc√™ tamb√©m especifica um 'tint color'. A view aplica essa cor a cada pixel que n√£o tem alpha 0.0, causando com que a forma da imagem adore a cor escolhida. Para suportar apar√™ncias distintas, voc√™ pode apenas mudar esta cor.";
"TintableImages.TintableImages.citation2" = "Quando criando a sua imagem, use um fundo tranaparente e pixeis pretos onde voc√™ quer que a imagem apare√ßa. Os pixels podem ser pacialmente opacos, dependendo se voc√™ quer que parte da sua imagem mescle com as cores de fundo. Quando adicionar a imagem ao seu cat√°logo de assets, configure para ser renderizada como uma imagem de template.";

"TintableImages.Example.text1" = "A imagem acima foi adicionada como um template. Quando nenhuma 'tint color' √© adicionada, ela usa as cores padr√£o do sistema e do seu esquema de cores atual. Esta √© auma boa abordagem para √≠cones que voc√™ pode ter na sua interface.";
"TintableImages.Example.text2" = "Mas voc√™ pode especificar 'tint colors' customizadas. Lembre-se de manter as cores adaptadas a cada esquema de cor dispon√≠vel.";
"TintableImages.Example.text3" = "E se voc√™ n√£o configurou a imagem como uma 'template image' no cat√°logo de assets, voc√™ pode for√ßar essa op√ß√£o em c√≥digo.";

"TintableImages.doc" = "Providing images for different appearances";

// Dynamic colors

"DynamicColors.title" = "Cores din√¢micas";

"DynamicColors.Intro.text1" = "Quando falamos em suportar o modo escuro, vores din√¢micas s√£o cores que se adaptam automaticamente ao esquema de cores selecionado no sistema.";

"DynamicColors.SystemColors.title" = "Cores do sistema";
"DynamicColors.SystemColors.text1" = "Quando usando as cores do sistema, elas podem se ajustar automaticamente ao esquema de cores atual.";
"DynamicColors.SystemColors.text2" = "Isto √© verdade, por exemplo, para as cores de texto e de fundo do sistema.";
"DynamicColors.SystemColors.text3" = "'UIColors' tamb√©m tem cores com o prefixo 'system', qu significa que elas s√£o adapt√°veis para o esquema de cores atual.";
"DynamicColors.SystemColors.comment1" = "Em SwiftUI o 'Color' atualmente n√£o suporta essas cores de sistema, mas voc√™ pode mapear o opbeto de 'UIColor' em um objeto de 'Color' caso seja necess√°rio.";

"DynamicColors.CustomColors.title" = "Cores customizadas";
"DynamicColors.CustomColors.text1" = "Quando usando cores customizadas, voc√™ vai precisar selecionar manualmente a cor ideal para o seu esquema de cores.";
"DynamicColors.CustomColors.comment1" = "A documenta√ß√£o da Apple sugere usar os assets de cor no XCAssets para isso, que iremos cobrir na p√°gina a seguir.";
"DynamicColors.CustomColors.text2" = "Mas muitas vezes, temos as cores em uma biblioteca separada, ou um arquivo JSON com os c√≥digos hexadecimais de cada cor da noss interface, e criamos os objetos de cor manualmente.";
"DynamicColors.CustomColors.text3" = "Ent√£o, precisamos de uma forma de mudar nossas cores quando necess√°rio.";
"DynamicColors.CustomColors.text3" = "Podemos usar um inicializador espec√≠fico no objeto de 'UIColor', que nos d√° o 'UITraitCollection' atual, permitindo que retornemos a cor correta para o esquema de cores atual.";
"DynamicColors.CustomColors.text4" = "E em SwiftUI podemos usar a vari√°vel de ambiente do esquema de cores para nos ajudar a decidir qual a core correta a usar.";
"DynamicColors.CustomColors.text5" = "O maior problema, na maioria das vezes, √© suportar a mudan√ßa din√¢mica de esquema de cores, quando o usu√°rio faz altera√ß√µes com o seu app sendo executado. Garanta que as cores das suas UIViews s√£o recarregadas quando mudan√ßas acontecerem, ou usar a vari√°vel de ambiente correta em SwiftUI para identificar o mesmo efeito.";

// Visual Aid

"VisualAid" = "Ajudas visuais";

// Button Shapes

"ButtonShapes.title" = "Figuras nos bot√µes";

"ButtonShapes.Intro.text1" = "\"Figuras nos bot√µes\" √© outra op√ß√£o de acessibilidade que pode ser ativada nas configura√ß√µes do sistema.";
"ButtonShapes.Intro.text2" = "A ideia √© destacar bot√µes, adicionando formas ao contorno deles, de forma que isso ajuda o usu√°rio a perceber quais elementos podem ser tocados quando usando a sua aplica√ß√£o.";
"ButtonShapes.Intro.comment1" = "Se voc√™ est√° usando um  'UIButton' ou um 'Button', esse contorno ser√° adicionado automaticamente quando a feature estiver ativada.";

"ButtonShapes.Example.text1" = "Observe os exemplos abaixo, onde todos s√£o bot√µes, e ent√£o ative a op√ß√£o nas configura√ß√µes do sistema e note novamente como eles se comportam.";
"ButtonShapes.Example.comment1" = "Tamb√©m √© interessante notar que nem todos os bot√µes tem o mesmo tipo de destaque. O bot√£o de voltar na barra de navega√ß√£o, por exeplo, fica com o texto sublinhado.";

"ButtonShapes.Code.text1" = "Casso voc√™ presice identificar manualmente o estado dessa feature para atualizar seu conte√∫do, voc√™ pode usar a vari√°vel est√°tica do UIAccessibility no UIKit, ou a vari√°vel de ambiente em SwiftUI.";

"button" = "Bot√£o";

// Bolded Text

"BoldedText.title" = "Texto em Negrito";

"BoldedText.Intro.text1" = "\"Texto em Negrito\" √© outra op√ß√£o de acessibilidade que pode ser ativada nas configura√ß√µes do sistema.";
"BoldedText.Intro.text2" = "√â geralmente usada por pessoas que t√™m baixa vis√£o com o intuito de aumentar o peso da fonte e deixar o conte√∫do mais f√°cil de ser lido.";
"BoldedText.Intro.text3" = "Quando usando fontes do sistema, elas ir√£o de adaptar automaticamente ao estilo definido pelo usu√°rio.";
"BoldedText.Intro.comment1" = "Quando usando fontes customizadas, voc√™ pode precisar ajustar manualmente o peso da fonte considerando se esta op√ß√£o est√° habilitada.";

"BoldedText.Code.text1" = "Tamb√©m √© importante perceber que fontes que j√° est√£o em negrito, tamb√©m aumentam seu peso quando esta op√ß√£o est√° ativada..";
"BoldedText.Code.comment1" = "Este app suporta a op√ß√£o de texto em negrito, mude essa op√ß√£o nas configura√ß√µes do seu dispositivo e veja como o app se comporta.";

// ---------- NEED TRANSLATION
// Section: Learn the Features

"LearnAccessibility.title" = "Learn Accessibility";
"LearnAccessibility.beforeYouReadThis" = "Before you continue, make sure to read more about this content on: ";

// Thinking Accessibility

"ThinkingAccessibility.title" = "Thinking Accessibility";
"ThinkingAccessibility.text1" = "This section is a different type of guide, where we want to show you how to think about accessibility while developing or creating new applications.";
"ThinkingAccessibility.text2" = "Accessibility is one of those things that if you say: \"I want to improve accessibility on our app!\", nobody is going to say no.";
"ThinkingAccessibility.text3" = "But it can get hard to start making these improvements and see a real impact to your users.";
"ThinkingAccessibility.text4" = "Or maybe you are starting a new app and you want to give support to accessibility features from the begining.";
"ThinkingAccessibility.text5" = "So, we are bringing a content based on real life experiences, alongside the common guide for all the accessibility options and features, to help you not only learn what they are, but the best scenarios to use them.";
"ThinkingAccessibility.comment1" = "The idea is to help you \"think accessibility\", understand common pitfalls and start a new project having a good idea of what you should expect when creating an iOS application.";
"ThinkingAccessibility.text6" = "Welcome, to the Accessibility Handbook classes!";
"ThinkingAccessibility.comment2" = "So, sit tight! If you are new on the iOS accessibility world, this is going to be a wild ride!";

// Accessibility is a team game

"TeamGame.title" = "Accessibility is a team game";
"TeamGame.text1" = "While learning accessibility by yourself feels good, it feels good to be able to reach people you could not before, it fells good to provide new services and content to a whole new group of people, you are most likely not going to handle it on your own.";
"TeamGame.comment1" = "Bear with me! üêª";
"TeamGame.text2" = "If you work on a company, on a startup, or you made a new app project with some friends, you know that creating a new app is not an easy task.";
"TeamGame.text3" = "And accessibility is not a developer or designer specific job. It's easy to think\n\n\"Oh, our designer should have figured that!\"\n\nOr even,\n\n\"Accessibility? That's a job for our developers!\"";
"TeamGame.text4" = "Think of it as part of your culture. Everybody should understand and question how accessibility should work.";
"TeamGame.text5" = "This way, we can make sure that we have the right questions and issues being tackled on every aspect of your application, on design, development, product... everything!";

"TeamGame.TalkToYourTeam.title" = "Talk to your team";
"TeamGame.TalkToYourTeam.text1" = "What was the last time you asked your designer \"Have you thought about how to interact with this element with a screen reader?\"";
"TeamGame.TalkToYourTeam.text2" = "Or what was the last time you asked your developer \"How can we make this component have a better interaction when using accessibility features?\"";
"TeamGame.TalkToYourTeam.comment1" = "I know this sound a little like coaching, sorry about that, but it's important.";
"TeamGame.TalkToYourTeam.text3" = "By asking questions, you are bringing the discussion about accessibility into your daily work.";
"TeamGame.TalkToYourTeam.text4" = "\"This font seems small, do we have support for dynamic fonts?\"";
"TeamGame.TalkToYourTeam.text5" = "\"The contrast does not seem good, have we checked for colorblindness? Do we have support for a increased contrast color pallet?\"";
"TeamGame.TalkToYourTeam.text6" = "Make questions. Usually, nobody is a specialist in accessibility, maybe someone knows more about a different platform than the one you are working with, and you can try connecting this knowledge with your current work.";
"TeamGame.TalkToYourTeam.comment2" = "I'm not a designer nor a specialist myself, I'm more of an enthusiast.";
"TeamGame.TalkToYourTeam.text7" = "But to make good questions, and give nice suggestions, you need to understand more what are you really working with.";

"TeamGame.ShareTheKnowledge.title" = "Share the knowledge";
"TeamGame.ShareTheKnowledge.text1" = "We believe that a good knowledge is something to share. And there is no better way to create an accessibility culture without sharing it.";
"TeamGame.ShareTheKnowledge.text1" = "Show to your peers whenever you create something nice, when you use a new feature that you have never used before.";
"TeamGame.ShareTheKnowledge.text2" = "Spreading knowledge will help more people to know about it, and give them and yourself more tools to work with in the future.";
"TeamGame.ShareTheKnowledge.comment1" = "And that goes for everything, not only accessibility!";
"TeamGame.ShareTheKnowledge.text3" = "And if you are using this app, you can even use the neat share tool on top of every page to bring people directly into an example of what you are talking about!";
"TeamGame.ShareTheKnowledge.image" = "Discuss accessibility with your peers!";

// Learn the Features - Page

"LearnTheFeatures.title" = "Learn the Features";
"LearnTheFeatures.text1" = "In order to make good questions, give better suggestions, integrate accessibility on your development...";
"LearnTheFeatures.text2" = "You need to learn what the accessibility features and options are, what difference they make on your app, how they impact your users, and most of all: How to use them.";
"LearnTheFeatures.text3" = "And this is your lucky day! Because this app not only contains guides on how to implement iOS accessibility options, but you can try them for yourself!";

"LearnTheFeatures.VoiceOver.title" = "VoiceOver";
"LearnTheFeatures.VoiceOver.text1" = "Supporting VoiceOver use on your apps is usually what needs the most implementation and thought.";
"LearnTheFeatures.VoiceOver.comment1" = "But, do you know what you can do with VoiceOver?";
"LearnTheFeatures.VoiceOver.text2" = "It's not only setting an 'accessibility label' into everything. We have different ways to group content, different ways to interact with elements and different ways to navigate through the app.";
"LearnTheFeatures.VoiceOver.text3" = "If you are not familiar with the VoiceOver, the concepts, the names, the gestures, take a look into our VoiceOver section on the Development Guides!";
"LearnTheFeatures.VoiceOver.comment2" = "And make sure to try using the VoiceOver while reading the content so you can better understand what each element does.";
"LearnTheFeatures.VoiceOver.text4" = "And if you want a \"hand\" to learn how to navigate using the VoiceOver, we have a gesture guide!";

"LearnTheFeatures.BeyondTheVoiceOver.title" = "Beyond The VoiceOver";
"LearnTheFeatures.BeyondTheVoiceOver.text1" = "Sometimes when talking about accessibility on mobile devices, we focus only on screen readers (on iOS, the VoiceOver).";
"LearnTheFeatures.BeyondTheVoiceOver.text2" = "But that's not what accessibility is about! There is an entire world of features, options, issues, disabilities, devices... that are part of accessibility.";
"LearnTheFeatures.BeyondTheVoiceOver.text3" = "And we also have guides on those!";
"LearnTheFeatures.BeyondTheVoiceOver.text4" = "Learn more about colors, motion, visual aids, fonts, haptics, contrast... and much more, so you know what to think and ask about.";

// Try it yourself

"TryItYourself.title" = "Try it yourself";
"TryItYourself.text1" = "Yep, thats it, try it for yourself!";
"TryItYourself.text2" = "Try not to keep wat you learn here only on this app. Start a new app, try implementing dynamic fonts, VoiceOver features, Dark mode, Rotor entries...";
"TryItYourself.text3" = "Understand what they do, how they impact your code, and how to use them.";
"TryItYourself.text4" = "We even have hundreds of code examples to help you get started. But they are only examples.";
"TryItYourself.text5" = "You'll get it for yourself once you really start introducing these featuers on your code and your app.";
"TryItYourself.text6" = "And also, try running everything on a real device. Get the feel of how things work in the real life, out of Xcode.";
"TryItYourself.comment1" = "What was the last time you ran your app with the VoiceOver running? Or that you tried to increase your fonts to see how your layout behaves?";
"TryItYourself.text7" = "The next sections, will introduce you to issues and common uses of accessibility. How to implement them, and how to plan to create more accessible apps.";
"TryItYourself.text8" = "Don't give up! We are just starting üòâ";

// Making a new app section

"MakingANewApp.title" = "Making a new app";

// Prepare the Ground

"PrepareTheGround.title" = "Prepare the Ground";
"PrepareTheGround.text1" = "So you are starting a new project? That's exciting!";
"PrepareTheGround.xcodeLogo" = "Xcode logo";
"PrepareTheGround.text2" = "That's the perfect time to think about what accessibility features you want to give support and prepare your project to support them.";
"PrepareTheGround.text3" = "But it's also the best time to create standards and code that will be easy to update and modified to support your project evolution.";
"PrepareTheGround.text4" = "And also the best part to keep accessibility in mind when creating these standards!";

"PrepareTheGround.WhatToSupport.title" = "What to support?";
"PrepareTheGround.WhatToSupport.text1" = "Well, ideally, we want to be able to support EVERYTHING!";
"PrepareTheGround.WhatToSupport.text2" = "But sometimes that's not feasible.";
"PrepareTheGround.WhatToSupport.text3" = "So, what we are going to discuss in this section, are ideas and tips to prepare your project to support accessibility features once you decide to support them!";
"PrepareTheGround.WhatToSupport.comment1" = "But it's always better if you decide to support them right away!";
"PrepareTheGround.WhatToSupport.text4" = "Things like, having a Color file, preparing a custom Font file, are key to have a better transition when adding support to dark mode or dynamic fonts, for example.";

// Create a color file

"CreateAColorFile.title" = "Setup a Color file";

"CreateAColorFile.text1" = "When creating a new app, you are most likely to decide with your team on a color pallet that represents your application.";
"CreateAColorFile.text2" = "You'll put effort into it, and you'll most likely not use the iOS system colors. Which is completely fine.";
"CreateAColorFile.text3" = "But colors are a very important part of accessibility, and you need to remember that not everybodey perceives color the same way.";
"CreateAColorFile.text4" = "So, if you prepare your colors to support accessibility options (even if you don't add support at first!), it'll be easier later to add them to your application.";

"CreateAColorFile.colors" = "Example of a blue color pallete.";

"CreateAColorFile.CentralizedColor.title" = "Centralized color file";
"CreateAColorFile.CentralizedColor.text1" = "First thing you should consider, is creating a color file.";
"CreateAColorFile.CentralizedColor.comment1" = "Maybe you should also consider having an entire UI module for it! Depending on the size of your project.";
"CreateAColorFile.CentralizedColor.text2" = "But like this, you'll make sure to use your colors, and you will be able to make changes to them if necessary.";
"CreateAColorFile.CentralizedColor.colors" = "Here's a initial color pallete. Very simple, and a few colors to use.";
"CreateAColorFile.CentralizedColor.text3" = "You can easily call your colors from the color file.";
"CreateAColorFile.CentralizedColor.disclaimer" = "One suggestion is not name your colors their 'color name'.\n Avoid things like 'company blue'.\nTry using things like 'highlightColor', because the color itself may change depending on the user's context.";

"CreateAColorFile.DarkMode.title" = "Add Dark Mode support";
"CreateAColorFile.DarkMode.text1" = "Now that you have your color file, a nice next ste would be adding support to dark mode.";
"CreateAColorFile.DarkMode.button1" = "Check our page on Dynamic Colors!";
"CreateAColorFile.DarkMode.text2" = "Now, if you change between dark and light modes, your colors will adapt to it!";
"CreateAColorFile.DarkMode.colors" = "Adaptable color pallete";

"CreateAColorFile.IncreaseContrast.title" = "Increase contrast";
"CreateAColorFile.IncreaseContrast.text1" = "Now, with your color file, you can add support to any accessibility feature for visual aid based on colors!";
"CreateAColorFile.IncreaseContrast.text2" = "For example, increased contrast!";
"CreateAColorFile.IncreaseContrast.button" = "Check our increase contrast page!";

// Create a font file

"CreateAFontFile.title" = "Setup a Font file";
"CreateAFontFile.text1" = "When creating a new project, it's also common to have a custom font that represents your brand. Or maybe you are sticking with the system font, and that's also good.";
"CreateAFontFile.text2" = "So, why should you have a Font file? Because this way, you can add support to dynamic font types to all of your fonts on a single place, and change the entire fonts of the project also from a single file!";
"CreateAFontFile.comment1" = "Just like it is going to make your life way easier if you create a Color file, you'll also be happy later if you have a Font file.";

"CreateAFontFile.FontCategories.title" = "Create your font categories";
"CreateAFontFile.FontCategories.text1" = "When using fonts, try avoiding fixed font sizes and weights.";
"CreateAFontFile.FontCategories.text2" = "Instead, create your own relation of fonts that make sense to your project (title, body, fancy title, subtitle...)";
"CreateAFontFile.FontCategories.text3" = "And with that, you'll be able to make adjustments and changes to the font, the scales, and use them across all your application.";

// Create accessibility Modifiers

"CreateAccessibilityModifiers.title" = "Create Accessibility Modifiers";
"CreateAccessibilityModifiers.text1" = "We usually have a UI library with lots of components. It's a natural step on a growing project, an easy and simple way to reuse components accross your entire application.";
"CreateAccessibilityModifiers.comment1" = "And please, make them accessible from the start!";
"CreateAccessibilityModifiers.text2" = "But, like we can reuse components, we can also consider reusing accessibility modifiers to our views!";

"CreateAccessibilityModifiers.ReusingAccessibility.title" = "Reusing Accessibility";
"CreateAccessibilityModifiers.ReusingAccessibility.text1" = "Consider the following scenario: You have a UI component library, and one of the components is a neat counter with a plus and minus button.";
"CreateAccessibilityModifiers.ReusingAccessibility.text2" = "And you know about the VoiceOver adjustable trait, so you make this component using it, and when focused, the user can swipe up and down to change the quantities. Lovely!";
"CreateAccessibilityModifiers.ReusingAccessibility.text3" = "But then, you get assigned to create a new component. A cell, that will be reused in several carousels, with an item image, title and description, but with the previously made counter inside it.";
"CreateAccessibilityModifiers.ReusingAccessibility.text4" = "And now, you start to think, what would be the best option to make this cell accessible?";
"CreateAccessibilityModifiers.ReusingAccessibility.text5" = "Since it will be displayed with several other cells, We would recomend each cell to be a single focusable item - so each one is an accessible element.";
"CreateAccessibilityModifiers.ReusingAccessibility.text6" = "But what about the counter? Should the counter be focused individually? You have already made all the logic for the adjustable element, so you should duplicate all of it on the cell as well?";

"CreateAccessibilityModifiers.ReusableModifiers.title" = "Reusable Modifiers";
"CreateAccessibilityModifiers.ReusableModifiers.text1" = "That is a situation where you can benefit of reusing accessibility modifiers. Just like you reuse UI components!";
"CreateAccessibilityModifiers.ReusableModifiers.text2" = "Then, by creating a View extension, you can reuse this modifier on the counter and on the cell.";
"CreateAccessibilityModifiers.ReusableModifiers.text3" = "You can do similar things for UIKit as well, and create your own library of accessibility helpers!";

// Making a new view

"MakingANewView.title" = "Making a new view";

// Plan before you implement

"PlanBeforeYouImplement.title" = "Plan your hierarchy";
"PlanBeforeYouImplement.text1" = "Plan your view hierarchy before you implement it. Well... this is obvious, isn't it? You should always plan before you simply start implementing stuff.";
"PlanBeforeYouImplement.text2" = "But what we want to discuss here, is planning the hierarchy of your UI components in order to simplify and implement accessibility alongside with the UI.";
"PlanBeforeYouImplement.text3" = "As a developer, I've been asked before: \"But how long does it take to add accessibility to a view?\" And my reply always was: \"As much as it takes to build the component.\"";
"PlanBeforeYouImplement.text4" = "Accessibility really goes together with the UI, so, if you know what to look for while implementing it, things will become much easier.";

"PlanBeforeYouImplement.Hierarchy.title" = "Understading Hierarchy";
"PlanBeforeYouImplement.Hierarchy.text1" = "When building a view, we basically stack more views inside and on top of each other. We may have a base view, with a couple of labels inside it, or a complete mess of stacks with several components.";
"PlanBeforeYouImplement.Hierarchy.text2" = "And why is it really important to understand your hierarchy? Most of it is not even visible in the final product. The user won't see if you used a single or multiple views on top of each other.";
"PlanBeforeYouImplement.Hierarchy.text3" = "But it does matter for Accessibility.";
"PlanBeforeYouImplement.Hierarchy.text4" = "Think beforehand how does it make sense for the screen reader to approach your component. Maybe it should be grouped into a single readable element, but maybe it has multiple buttons that should be focused individually.";
"PlanBeforeYouImplement.Hierarchy.example" = "Example of a view hierarchy. This represents an UI component with a few views inside it. Different background colors represents a different level in the hierarchy.";

"PlanBeforeYouImplement.Group.title" = "Group your elements correctly";
"PlanBeforeYouImplement.Group.text1" = "In the example above, imagine it's a header for a product page (It's important to know the context of your view!). Always wonder: How would it make sense for this content to be read?";
"PlanBeforeYouImplement.Group.text2" = "And after giving it some thought, we decide to group the image and it's description as a single element, since the description exaplains the image itself, and group both labels into another element so they will be read together.";
"PlanBeforeYouImplement.Group.text3" = "Grouping the image and it's description is easy! Since they are in the same hierarchy, we can take the parent view and group the elements together.";
"PlanBeforeYouImplement.Group.text4" = "But grouping the labels together, to be read as a single element, will take some changes to our code.";
"PlanBeforeYouImplement.Group.text5" = "Even though they are in the same hierarchy, their parent view also holds the other views on this header. In order to group the labels together, we need to embed them into another view, and group them into the parent.";
"PlanBeforeYouImplement.Group.imageExplanation" = "On the diagram above, the background colors represent the hierarchy of the views, and the border represents and accessibility group.";

"PlanBeforeYouImplement.Conclusion.title" = "Concluding...";
"PlanBeforeYouImplement.Conclusion.text1" = "If you understand how you want your content to be read by the VoiceOver, and how you are building your view, you can account the accessibility in your hierarchy.";
"PlanBeforeYouImplement.Conclusion.text2" = "And position the elements in the hierarchy in order to make the reader focus on them in a way that makes more sense to the user.";
"PlanBeforeYouImplement.Conclusion.text3" = "And in the end our view hierarchy would look something like the following diagram, with only 2 accessibility elements.";

// Repeated views

"RepeatedViews.title" = "Repeated views";
"RepeatedViews.text1" = "What do we mean by Repeated Views?";
"RepeatedViews.text2" = "Basically, tables or collections, which contains groups of views that are very similar.";
"RepeatedViews.text3" = "If you consider a screen reader going through this kind of content, you'd expect each element to be focused individually.";
"RepeatedViews.text4" = "And NOT focusing on each subviews of a single cell, to than move to the next cell.";
"RepeatedViews.text5" = "Check the following example describing the hierarchy of the views in different carousels, and notice how the VoiceOver navigates through them.";
"RepeatedViews.example1" = "In the example above, no subview has been grouped, so each one of them is going to be focused by the voice over individually.";
"RepeatedViews.example2" = "In this example, the views are grouped into a single accessible element.";
"RepeatedViews.text6" = "You can make a huge difference with a single line of code!";

// Handling Images and Icons

"ImagesAndIcons.title" = "Handle Images and Icons";
"ImagesAndIcons.text1" = "How to properly handle images and icons on screen reader accessibility?";

"ImagesAndIcons.Icons.title" = "Icons";
"ImagesAndIcons.Icons.text1" = "Icons are a useful way to represent content and help users find and identify actions on applications.";
"ImagesAndIcons.Icons.text2" = "Ideally, most icons should not be used without an accessory text that explains better it's context. Like in a tabbar.";
"ImagesAndIcons.Icons.text3" = "The icon itself can be ommited for the screen reader, since it does not add any new information.";
"ImagesAndIcons.Icons.text4" = "But if you do have an icon, that is not followed by a text, you need to provide an accessibility label to it, and maybe an accessibility hint to better explain what it does.";
"ImagesAndIcons.Icons.icon" = "Hints";
"ImagesAndIcons.Icons.iconHint" = "Double tap to open a hint";
"ImagesAndIcons.Icons.comment1" = "These types of icons are very common on navigation bars!";

"ImagesAndIcons.Images.title" = "Images";
"ImagesAndIcons.Images.text1" = "If we consider a screen reader, for a user that is visually impaired, we should always hide the images, right?";
"ImagesAndIcons.Images.text2" = "That may seem like the case, but it's actually wrong. The user may want to show the image to someone else, or maybe screenshot it to use it later.";
"ImagesAndIcons.Images.comment1" = "The VoiceOver now can even read text inside images and give better descriptions of the content.";
"ImagesAndIcons.Images.text3" = "So it's important that the image can be focused, ideally with an alternate text, and with the image trait!";
"ImagesAndIcons.Images.comment2" = "Different from the Icons, that most of the time are buttons, so they don't really need the image trait on them.";

"ImagesAndIcons.HideImage.title" = "Hiding Images";
"ImagesAndIcons.HideImage.text1" = "Sometimes it does make sense to hide the image from the reader, specially if it's being grouped with other elements.";
"ImagesAndIcons.HideImage.text2" = "A common example, is when you have a previews of an item (maybe on a collection of items), that you can open to see it's detail.";
"ImagesAndIcons.HideImage.text3" = "In this situation, the image can be ommited on the preview, since it's going to be combined with other elements and won't add much to the screen reader navigation, and left as an accessible element on the details page, where it stands out for itself as an element.";
"ImagesAndIcons.HideImage.comment1" = "Example of a carousel where there are images on the cells, but they are hidden to the VoiceOver.";

// Add the correct traits

"AddTraits.title" = "Add the correct traits";
"AddTraits.text1" = "Accessibility traits are useful ways to provide more information or give more action to accessible elements.";
"AddTraits.text2" = "Some components automatically set their traits, like Buttons or Images, but you need to manually set them on some views, specially when you group several elements together.";
"AddTraits.comment1" = "As a general rule, make sure all the components have the expected trait: image, button, title, search field...";
"AddTraits.text3" = "And here we'll cover some common issues you may have while creating new UI components.";

"AddTraits.Button.title" = "Buttons";
"AddTraits.Button.text1" = "The button trait indicates an element can be activated with a double tap on the VoiceOver.";
"AddTraits.Button.text2" = "So, make sure to add it to components that are tappable, like cells, and handle it's activation.";

"AddTraits.Link.title" = "Links";
"AddTraits.Link.text1" = "If you have a compnent that opens any external page, or a web URL, make sure to add the link trait to it.";
"AddTraits.Link.comment1" = "If you are using the Link view in SwiftUI, it will automatically have the link trait.";

"AddTraits.Header.title" = "Header";
"AddTraits.Header.text1" = "This is an easy one to be overlooked, but adding the header trait will help navigate on your content using the Rotor tool.";
"AddTraits.Header.text2" = "Make sure to add it on your headers to improve the user's navigation.";
"AddTraits.Header.comment1" = "This page use the header trait on it's subtitles, you can enable the VoiceOver and try using it.";

"AddTraits.Selected.title" = "Selected";
"AddTraits.Selected.text1" = "This trait is also very important when a component is not only a button, but something that can be selected (like radio buttons or checkboxes).";
"AddTraits.Selected.text2" = "It's also nice to add an accessibility hint telling the when activated, the item will be selected.";

"AddTraits.Outro.text1" = "Overall, take a look on the accessibility traits list, get to know them, and you get the idea of when and where to use them properly.";

// Handle all Action

"HandleAllActions.title" = "Handle all actions";
"HandleAllActions.text1" = "It's possible for a single view to have multiple actions inside it.";
"HandleAllActions.text2" = "Maybe it has multiple buttons, or gestures that trigger specific actions on your app.";
"HandleAllActions.text3" = "Ideally, you need to make sure that all these actions are also supported when using accessibility options, specially screen readers.";
"HandleAllActions.comment1" = "The more complex a view is, the more difficult it gets to make it accessible. And maybe if your view is too crowded, you will need to rethink how to place your actions!";

"HandleAllActions.ButtonFocus.title" = "Multiple Button focus";
"HandleAllActions.ButtonFocus.text1" = "If you have multiple buttons, and your view is not grouped into a single element, you must ensure that all buttons can be reached by the VoiceOver, and that they all execute the expected actions when activated.";

"HandleAllActions.CustomActions.title" = "Custom Actions";
"HandleAllActions.CustomActions.text1" = "Custom actions are a nice way to support multiple actions inside a view.";
"HandleAllActions.CustomActions.text2" = "It can even be used to add support to actions that usually cannot be performed while using VoiceOver, like custom gestures.";

"HandleAllActions.Adjustable.title" = "Adjustable elements";
"HandleAllActions.Adjustable.text1" = "The adjustable trait and actions are a nice way to support counters and sliders on your app.";
"HandleAllActions.Adjustable.text2" = "This way, you can compact multiple increment and decrement buttons into a single element for the VoiceOver.";

"HandleAllActions.CompetingActions.title" = "Competing Actions";
"HandleAllActions.CompetingActions.text1" = "If your view needs multiple types of action handling on VoiceOver, like it has buttons but also an adjustable counter, you'll run into some issues.";
"HandleAllActions.CompetingActions.text2" = "You can't use adjustable actions with custom actions on a single element, their gestures are the same while using the VoiceOver.";
"HandleAllActions.CompetingActions.text3" = "You will need to breakdown your view hierarchy in order to support the actions you want, without compromising the usability of the component.";
"HandleAllActions.CompetingActions.text4" = "In the example above, let's consider it's going to be a reusable view that will be placed in a carousel. So we need to somehow group the element so the content won't be read multiple times while navigating.";
"HandleAllActions.CompetingActions.text5" = "But since it has multiple actions (The view can be tapped to open a new page, there is a button to favorite the item, and we have a counter to change it's quantity) we won't be able to group it all into a single element if we want to support all of it's actions.";
"HandleAllActions.CompetingActions.text6" = "So, we are breaking it into 2 accessible elements, the first will have a custom action to allow opening the item and favoriting it, and the second will be an adjustable element to handle the quantity changes.";
"HandleAllActions.CompetingActions.text7" = "And to make things even better, we'll update the accessibility label of the counter to add the title of the item, so you know which item you are changing the quantity.";
"HandleAllActions.CompetingActions.text8" = "This is a pretty challenging view to make accessible, we have to use a lot of knowledge and different ways to organize the content in order to make it all work.";
"HandleAllActions.CompetingActions.text9" = "The view hierarchy is also very important to allow our solution, and we even have to combine the elements using the '.contain' option in SwiftUI, or 'shouldGroupAccessibilityChildren' in UIKit.";
"HandleAllActions.CompetingActions.comment1" = "If you want to see more of this view and how it was built, you can check the source code of the project on GitHub!";

// Validate Colors

"ValidateColors.title" = "Validate Colors";
"ValidateColors.text1" = "This one is easy! Every time you build a new view, you should use the correct colors for everything.";
"ValidateColors.text2" = "And if you support multiple solor schemes (ligh, dark, increased contrast...), you should make sure all of them work as expected.";
"ValidateColors.comment1" = "If you have a centralized color file, make sure to use it!";
"ValidateColors.text3" = "And careful with background colors. Don't set them to white or black, have an adaptable background color. Otherwise you may enconter bugs while changing the current scheme.";

"ValidateColors.FixedBackground.title" = "Non adaptable colors";
"ValidateColors.FixedBackground.text1" = "Here are some examples of using non adaptable colors, they may seem ok on your current color scheme, but try changing between light and dark mode and see how they behave.";
"ValidateColors.FixedBackground.text2" = "This kind of issue may also happen when using a mix of system colors for some things (which are adaptable), but using your own colors for other things.";
"ValidateColors.FixedBackground.text3" = "And this can be really bad, because if some of the colors change, part of your content may disappear after the transition.";

"ValidateColors.Design.title" = "";

// Making a new scene

"MakingANewScene.title" = "Making a New Scene";

// Understand how components interact

"UnderstandHowComponentsInteract.title" = "Understand How Components Interact";
"UnderstandHowComponentsInteract.text1" = "Here, we'll be discussing about creating entire scenes, a composition of UI components.";
"UnderstandHowComponentsInteract.comment1" = "On the last section, we discussed more about individual UI components, and how to handle their accessibility.";
"UnderstandHowComponentsInteract.text2" = "When we bring more components together, the way they are placed on the screen, and more views that we may add to make the layout may change how we implement their accessibility.";
"UnderstandHowComponentsInteract.text3" = "Here, we have examples of individual components and their view hierarchy.";
"UnderstandHowComponentsInteract.text4" = "Individually, we should handle the accessibility for each component, but when we place them together on a veiw, we may add new components to make the correct layout, and it may change how we expect the accessibility navigation to work.";

"UnderstandHowComponentsInteract.Scene.title" = "Place Components on a Scene";
"UnderstandHowComponentsInteract.Scene.text1" = "And now, we can see how these components are used to build a whole new view.";
"UnderstandHowComponentsInteract.Scene.text2" = "On the diagram above, the new views necessary to build the scene are marked with a different background color.";
"UnderstandHowComponentsInteract.Scene.text3" = "Notice how we need more components and auxiliar views in order to make the scene to be built.";
"UnderstandHowComponentsInteract.Scene.text4" = "What we are going to investigate in this section, is what should we think and plan when building a new scene like this, and how it changes the accessibility of our components.";

// Hidden Objects

"HiddenObjects.title" = "Hidden Objects";
"HiddenObjects.text1" = "When talking about hidden objects here, we are talking about views that are not accessible elements, views that are going to be ignored by the VoiceOver when navigating.";
"HiddenObjects.text2" = "But shouldn't all the content be read by the VoiceOver?";
"HiddenObjects.text3" = "Yes. But when building a scene, it's common to add elements as Separators, Dividers or Spacers in order to make the correct layout work.";
"HiddenObjects.text4" = "But these components don't have accessibility labels, nor add information to the page.";
"HiddenObjects.text5" = "So, they should not be focused by the screen reader.";

"HiddenObjects.Hiding.title" = "Hiding Elements";
"HiddenObjects.Hiding.text1" = "To hide an element, it's as easy as setting it not to be an accessible element.";
"HiddenObjects.Hiding.text2" = "If you are using SwiftUI, elements like Dividers and Spacers are not accessible by default.";
"HiddenObjects.Hiding.text3" = "In UIKit, we don't have the same luck. If you are using an additional view to make these kind of components, make sure to set them as non-accessible elements so the VoiceOver won't focus on them.";

// Figure different font scales

"FigureDifferentFontScales.title" = "Figure different font scales";
"FigureDifferentFontScales.text1" = "Supporting Dynamic fonts is tough. But larger text sizes is the most commonly used accessibility feature.";
"FigureDifferentFontScales.text2" = "So, when building a new view, but specially a new scene, you must check how it behaves when using different font sizes, and adjust it so no content is lost";
"FigureDifferentFontScales.comment1" = "This is also a very important step to talk with your design team! Different scenes and components may behave differently depending on your font size, so it's important to keep things aligned when implementing these behaviors.";

"FigureDifferentFontScales.Test.title" = "Test it";
"FigureDifferentFontScales.Test.text1" = "The most important part is: Test it.";
"FigureDifferentFontScales.Test.text2" = "Run the app using different font scales, and make sure it does not impact negatively the user naviagtion.";
"FigureDifferentFontScales.Test.text3" = "All content should be readable, and your scene layout does not break.";
"FigureDifferentFontScales.Test.comment1" = "I strongly recommend you check our page on supporting different font scales, there you'll find different approaches for your code and layout, and you can change the font size on your device to .";

// Is this modal

"IsThisModal.title" = "Handle modal views";
"IsThisModal.text1" = "Here, we are considering modals any view that is presented on top of your current context.";
"IsThisModal.text2" = "Accessibility wise, modals are tricky, because we want the user to focus on the modal whenever it appears before they focus on the rest of the page's content.";
"IsThisModal.text3" = "So we need to make sure that it also happens when using VoiceOver.";

"IsThisModal.ChangeFocus.title" = "Change focus";
"IsThisModal.ChangeFocus.text1" = "Presenting a modal may be the best example of forced focus change on iOS VoiceOver.";
"IsThisModal.ChangeFocus.text2" = "You can redirect the screen reader to the modal content when it's presented.";
"IsThisModal.ChangeFocus.text3" = "But we also need to make sure that the content is being focused individually by setting the view as an accessibility modal, so the content on the back isn't focused by the VoiceOver.";
"IsThisModal.ChangeFocus.text4" = "And, as a nice touch, add the support for the escape gesture to dismiss it.";
"IsThisModal.ChangeFocus.comment1" = "Enable the VoiceOver and check the example below.";

// Handle animations

"HandleAnimations.title" = "Handle Animations";
"HandleAnimations.text1" = "More than making sure your animations work, you also need to consider the reduce motion accessibility option.";
"HandleAnimations.text2" = "As a general rule, whenever we have an animation, we should check if the reduce motion option is enabled, and if so, we skip the animation directly to it's end state.";
"HandleAnimations.comment1" = "Check the examples on the Reduce Motion page, change the state of the reduce motion on your device and notice how the behavior changes.";

// Navigation and Dismiss

"NavigationAndDismiss.title" = "Navigation and dismiss";
"NavigationAndDismiss.text1" = "Navigation is an important part of applications. Being able to open new scenes and come back to previous ones.";
"NavigationAndDismiss.text2" = "So, we need to make sure the navigation is working properly when using screen readers, in our case, the VoiceOver.";
"NavigationAndDismiss.text3" = "If you are using the system's Navigation Controller, most of it will already be handled by it. You'll have a back button, so there is always a button that can be focused to pop back on the navigation.";
"NavigationAndDismiss.comment1" = "And in SwiftUI you'll gain the escape gesture automatically, so the user can perform the gesture to close the current view.";
"NavigationAndDismiss.text4" = "What does not happen automatically, is supporting the escape gesture when presenting modal views, or modals having a close button.";
"NavigationAndDismiss.text5" = "If your modal depends on \"clicking outside of it\" to be closed, you need to handle it as well on the VoiceOver. If that content outside is not focusable, how will the user be able to close it?";
"NavigationAndDismiss.text6" = "So, always having a close button, and supporting the escape gesture, are nice ways to keep these view more accessible.";
"NavigationAndDismiss.comment2" = "And if you are using a custom navigation on your project, make sure to implement these gestures as a default on your framework. This way, you won't need to worry about it when creating a new scene!";

// Accessibility Shortcuts

"AccessibilityShortcuts.title" = "Accessibility Shortcuts";
"AccessibilityShortcuts.comment1" = "This is more of an extra when talking about accessibility, but it's always good to have on top of your mind how to make these improvements!";

"AccessibilityShortcuts.Magic.title" = "Magic Tap";
"AccessibilityShortcuts.Magic.text1" = "The Magic Tap is a custom gesture that can be used to perform any action on your app.";
"AccessibilityShortcuts.Magic.text2" = "It is contextual, you the currently focused view should have the Magic Tap implemented on it in order for it to work.";
"AccessibilityShortcuts.Magic.comment1" = "It can be done on the parent view! Which is easier to do specially when talking about UIKit views.";
"AccessibilityShortcuts.Magic.text3" = "But why would I use the MagicTap?";
"AccessibilityShortcuts.Magic.text4" = "Documentation says to perform the main action of your application, maybe playing or pausing a music, or taking a photo.";
"AccessibilityShortcuts.Magic.text5" = "But if you look at your context, you may identify the main action for your page. For instance, if you are on a checkout (which usually presents a lot of information), and you have a 'Make Purchase' button at the bottom of your page, you may add the Magic Tap as a shortcut to perform that action.";
"AccessibilityShortcuts.Magic.comment2" = "Remember that VoiceOver navigation would normally need to go through all that content before reaching the purchase button.";
"AccessibilityShortcuts.Magic.text6" = "I've also seen it being used in book apps to move to the next page, or games to play and pause the current match.";
"AccessibilityShortcuts.Magic.text7" = "But, one important part is telling the user that this gesture exists. You may do so using accessibility hints or notifications whenever the user enters a page with a Magic Tap.";

"AccessibilityShortcuts.Rotor.title" = "Rotor";
"AccessibilityShortcuts.Rotor.text1" = "Rotor is a neat tool when using VoiceOver. And it basically works as a filter, allowing the user to navigate only on the content selected by the Rotor.";
"AccessibilityShortcuts.Rotor.text2" = "While it may be a little complex to implement at first, it's really powerful.";
"AccessibilityShortcuts.Rotor.text3" = "If your app contains lot's of content, you can use it to help the user find elements.";
"AccessibilityShortcuts.Rotor.comment1" = "it already works automatically with the header trait, so thats a nice reason to use it!";
"AccessibilityShortcuts.Rotor.text4" = "And we have an example page with custom rotor entries that you can test for yourself.";

// Testing for Accessibility

"TestingForAccessibility.title" = "Testing for Accessibility";

// AccessibilityInspector

"AccessibilityInspector.title" = "Accessibility Inspector";
"AccessibilityInspector.text1" = "The Accessibility Inspector is a developer tool that comes with Xcode and allows to simulate the VoiceOver by focusing on individual accessible elements and displaying it's accessibility information.";
"AccessibilityInspector.text2" = "You can find it on the Xcode menu, on the developer tools section.";
"AccessibilityInspector.comment1" = "It's not the best tool ever made, but it's really helpful to check your accessibility implementation on the iOS simulator while developing, specially if you don't have or cannot build on a real device.";

"AccessibilityInspector.Process.title" = "Select Processes";
"AccessibilityInspector.Process.text1" = "The inspector can be used on any program running on your Mac, but, to test your app, you'll need to select the simulator process on the top left side of the inspector.";
"AccessibilityInspector.Process.text2" = "And on the top right side, you'll find 3 tabs.";
"AccessibilityInspector.Process.image" = "The accessibility inspector tabs. From left to right: Inspect tool, Audit tool, Accessibility override tool.";

"AccessibilityInspector.InspectTools.title" = "Inspect Tools";
"AccessibilityInspector.InspectTools.text1" = "When inspecting an element, the Inspector will simulate the VoiceOver focus, and it will only focus on accessible elements!";
"AccessibilityInspector.InspectTools.text2" = "You can simulate the navigation by using the chevron/arrow icons. The right will move to the next element, and the left to the previous one.";
"AccessibilityInspector.InspectTools.text3" = "If you want, the content can be read out loud by enabling the speech option on the text baloon icon.";
"AccessibilityInspector.InspectTools.text4" = "And by enabling the play button, it will automatically navigate on your app.";
"AccessibilityInspector.InspectTools.image" = "The inspector navigating tools. From left to right: Enable content read, previous element, navigate automatically, next element.";
"AccessibilityInspector.InspectTools.text4" = "There is also the focus tool.";
"AccessibilityInspector.InspectTools.focus" = "When enabled, you can use your mouse to select which view to focus on the simulator.";

"AccessibilityInspector.Inspecting.title" = "Inspecting";
"AccessibilityInspector.Inspecting.text1" = "When focused on an element, it will display a green cursor on top of it.";
"AccessibilityInspector.Inspecting.text2" = "And the inspector will display all of it's accessibility properties.";
"AccessibilityInspector.Inspecting.image" = "Example of the Accessibility inspector while reading an element. On the inspector scene, the properties of the focused element are being displayed (accessibility label, value, traits, hints, identifier).";
"AccessibilityInspector.Inspecting.text3" = "You can also use the Inspector to perform actions on the focused view, such as activate, increment, decrement... It will display all the available actions for the view, so you can also test custom actions.";
"AccessibilityInspector.Inspecting.text4" = "I like adding screenshots of the Accessibility Inspector to my Pull Requests when fixing accessibility issues! It's a nice way to showcase the changes that were made.";

"AccessibilityInspector.Auditing.title" = "Auditing";
"AccessibilityInspector.Auditing.text1" = "The Audit tab can be used to run an automatic audit on your app.";
"AccessibilityInspector.Auditing.text2" = "The inspector will give feedback on several informations, from missing accessibility labels, to hit area sizes.";

"AccessibilityInspector.Options.title" = "Change Options";
"AccessibilityInspector.Options.text1" = "And the last tab provides a fast access to changing accessibility options on your simulator.";
"AccessibilityInspector.Options.text2" = "It can be really useful if you are testing more than one accessibility option at once, and can quickly move between them.";

// RunIRL

"RunIRL.title" = "Run the App in real life";
"RunIRL.text1" = "By real life, we mean on a real iOS device.";
"RunIRL.text2" = "This is the best way to test your accessibility, on a real device.";
"RunIRL.text3" = "All iOS devices have all the accessibility tools and options discussed in this app.";
"RunIRL.comment1" = "And the idea of this being an app is for you to be able to check how every option work on your own device!";
"RunIRL.text4" = "By testing on a real device, you can validate many things that are not possible on the simulator: The gestures, notifications, speaking rates, rotors...";
"RunIRL.text5" = "But the most important part, is you getting comfortable with using the accessiblity tools, and understanding better their impact on code and on your users.";

"RunIRL.Shortcuts.title" = "Shortcuts";
"RunIRL.Shortcuts.text1" = "Enabling and disabling accessibility options can be very slow and painful to do in order to test it.";
"RunIRL.Shortcuts.text2" = "So, iOS even comes with custom shortcuts that you can use to access these options faster.";
"RunIRL.Shortcuts.text3" = "You can add shortcuts to the control center for things like dynamic fonts and dark mode.";
"RunIRL.Shortcuts.text4" = "And there is even an accessibility shortcuts option on the Control Center!";
"RunIRL.Shortcuts.image" = "Accessibility shortcuts on the iOS control center.";

// Identify Issues

"IdentifyIssues.title" = "Identify issues";

// UngroupedElements

"UngroupedElements.title" = "VoiceOver Issues";
"UngroupedElements.text1" = "VoiceOver issues are usually hard to find when looking at just the code. Ideally, youn should test it using a real device or the accessibility inspector to verify how it behaves.";
"UngroupedElements.text2" = "But we do have some tips to help you keep an eye for it!";

"UngroupedElements.UngroupedElements.title" = "Ungrouped elements";
"UngroupedElements.UngroupedElements.text1" = "This is the most common issue on VoiceOver, but it's also the easiest to fix!";
"UngroupedElements.UngroupedElements.text2" = "But to identify it on code, you need to first check what view this code is rendering and think: How should these elements be read by the VoiceOver?";
"UngroupedElements.UngroupedElements.text3" = "Most times, we can figure how contents should be grouped by looking into the view hierarchy and noticing how the screen reader navigates on it.";
"UngroupedElements.UngroupedElements.text4" = "And to identify a missing group, you just need to take a look on the parent view! And check if it's being grouped or not.";

"UngroupedElements.UngroupedExamples.text1" = "The code above renders a cell that is being reused on a carousel.";
"UngroupedElements.UngroupedExamples.text2" = "If you check the parent view (the VStack), you can notice that it's not being grouped.";
"UngroupedElements.UngroupedExamples.text3" = "So the cells are not being read as a single element, but the title is being read separate from the content, on all cells!";
"UngroupedElements.UngroupedExamples.comment1" = "And if the carousel contains mnore cells horizontally, the titles are all gonna be read before the descriptions.";
"UngroupedElements.UngroupedExamples.text4" = "To solve it, you just need to group the elements on the parent view using the combine strategy.";
"UngroupedElements.UngroupedExamples.comment2" = "Why combine? We want it to become a single element, and that's exaclty what the combine does!";
"UngroupedElements.UngroupedExamples.text5" = "On UIKit it's a bit trickier. You will still need to check the parent view, but now you should verify if it is an accessible element, and if it has the correct accessibility label as a combination of it's childs.";
"UngroupedElements.UngroupedExamples.text6" = "If you don't notice ANY accessibility code being implemented, pay atention! I always suggest having a method that configures the accessibility of the views, so it's easy to find when reviewing.";

// Accessibility Welcome

"AccessibilityWelcome.card1" = "Do you want to make your apps more accessible but you don't know how?";
"AccessibilityWelcome.card2" = "Do you think sometimes: \"I know the accessibility features, but I just don't know where to use them\"?";
"AccessibilityWelcome.card3" = "Do you want to be able to create and review code keeping accessibility in mind?";
"AccessibilityWelcome.card4" = "Introducing: Classes!\n\nOur new content focused to help you learn just that.\nWhat to think and what to expect when considering accessibility on your apps!";

"AccessibilityWelcome.next" = "Next";
"AccessibilityWelcome.previous" = "Previous";
"AccessibilityWelcome.close" = "Close";
"AccessibilityWelcome.more" = "Open classes onboarding";
"AccessibilityWelcome.letsgo" = "Let's go!";

// Mix of colors

"MixOfColors.title" = "Mix of colors";
"MixOfColors.comment1" = "What?";
"MixOfColors.text1" = "Here, mix of colors is mixing adaptable colors with non-adaptable colors.";
"MixOfColors.text2" = "And this may seem silly, but if you do support multiple color modes, you should be really careful to mix colors from different sources.";

"MixOfColors.Example.text1" = "Take a look at the code below.";
"MixOfColors.Example.comment1" = "It seems harmless, doesn't it?";
"MixOfColors.Example.text2" = "By default, the text color is adaptable, so in thie example, we are placing an adaptable text on top of a solid color (that should be your background color).";
"MixOfColors.Example.text3" = "But if you switch the color scheme, the text will disappear.";
"MixOfColors.Example.comment2" = "The text above renders the example on the code. Try changing your color scheme and see how it behaves.";
"MixOfColors.Example.text4" = "And this will also happen on UIKit, so you always need to test all the color schemes when implementing it, and finding fixed colors may be a flag that something may be wrong.";

"MixOfColors.CounterExample.title" = "Counter Example";
"MixOfColors.CounterExample.text1" = "Sometimes it does make sense to use fixed colors.";
"MixOfColors.CounterExample.text2" = "It usually comes when using a solid background color (that is not the default background color) to highlight a component, like a button.";
"MixOfColors.CounterExample.text3" = "In this case, we want the text color to always be white, because it sits on top of a colorful background, even if it changes the color scheme.";

// Missing Accessibility Actions

"MissingAccessibilityActions.title" = "Missing Accessibility Actions";
"MissingAccessibilityActions.text1" = "We've already discussed the importance of handling all the actions you have on regular input also on VoiceOver.";
"MissingAccessibilityActions.text2" = "And here we'll talk a bit on how to identify this kind of issues by looking into the code.";

"MissingAccessibilityActions.Gesture.title" = "Gestures";
"MissingAccessibilityActions.Gesture.text1" = "When using custom gestures, you need to provide a way to support that gesture with screen readers.";
"MissingAccessibilityActions.Gesture.comment1" = "The long press gesture is an exception, when using it, the accessible component will gain the triple tap gesture, which simulates the long press. But in these cases, it's important to announce it using some other content, like an accessibility hint.";
"MissingAccessibilityActions.Gesture.text2" = "The example above uses a tap gesture (and it's even grouped!), very simple. But when using VoiceOver, and you activate the element, the gesture is not going to be triggered. SO you need to manually add it to the code.";

"MissingAccessibilityActions.Group.title" = "Group elements with buttons";
"MissingAccessibilityActions.Group.text1" = "When grouping elements, we may end up grouping a button together.";
"MissingAccessibilityActions.Group.text2" = "When grouping elements, we may end up grouping a button together. And if we don't handle it correctly, we may end up losing the button's action.";
"MissingAccessibilityActions.Group.text3" = "In this case, we need to make sure that the grouped element has the button trait, and it executes the same action of the button when activated.";
"MissingAccessibilityActions.Group.comment1" = "And if you are grouping multiple buttons together, oh boy! That's a good example for a custom actions!";
